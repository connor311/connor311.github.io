<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: series | Connor Ross | Tech]]></title>
  <link href="http://connor311.github.io/categories/series/atom.xml" rel="self"/>
  <link href="http://connor311.github.io/"/>
  <updated>2013-08-13T00:19:13-04:00</updated>
  <id>http://connor311.github.io/</id>
  <author>
    <name><![CDATA[Connor Ross]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ã‰tudes for Erlang - CH 10]]></title>
    <link href="http://connor311.github.io/2013/08/13/etudes-for-erlang-ch-10/"/>
    <updated>2013-08-13T00:13:00-04:00</updated>
    <id>http://connor311.github.io/2013/08/13/etudes-for-erlang-ch-10</id>
    <content type="html"><![CDATA[<p>SUPER ANNOYED tonight and this freaking chapter just keeps on going on and on.  I will finish this post another night, but I want get up some code for the meetup tomorrow.  <!-- more --></p>

<h2>Chapter 10: Storing Structured Data</h2>

<p><a href="http://chimera.labs.oreilly.com/books/1234000000726/ch10.html">link</a></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (call_data.csv)</span> <a href='/downloads/code/erlang-etudes/ch10/call_data.csv'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="mi">650</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">3326</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">01</span><span class="p">:</span><span class="mi">47</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">05</span><span class="p">:</span><span class="mi">11</span>
</span><span class='line'><span class="mi">415</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">7871</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">02</span><span class="p">:</span><span class="mi">20</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">05</span><span class="p">:</span><span class="mi">09</span>
</span><span class='line'><span class="mi">729</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">8855</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">00</span><span class="p">:</span><span class="mi">55</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">02</span><span class="p">:</span><span class="mi">18</span>
</span><span class='line'><span class="mi">729</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">8855</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">02</span><span class="p">:</span><span class="mi">57</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">03</span><span class="p">:</span><span class="mi">56</span>
</span><span class='line'><span class="mi">213</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">0172</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">00</span><span class="p">:</span><span class="mi">59</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">03</span><span class="p">:</span><span class="mi">49</span>
</span><span class='line'><span class="mi">946</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">9760</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">01</span><span class="p">:</span><span class="mi">20</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">03</span><span class="p">:</span><span class="mi">10</span>
</span><span class='line'><span class="mi">301</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">0433</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">01</span><span class="p">:</span><span class="mi">44</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">04</span><span class="p">:</span><span class="mi">06</span>
</span><span class='line'><span class="mi">301</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">0433</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">05</span><span class="p">:</span><span class="mi">17</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">07</span><span class="p">:</span><span class="mi">53</span>
</span><span class='line'><span class="mi">301</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">0433</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">10</span><span class="p">:</span><span class="mi">05</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">13</span><span class="p">:</span><span class="mi">14</span>
</span><span class='line'><span class="mi">729</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">8855</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">04</span><span class="p">:</span><span class="mi">40</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">07</span><span class="p">:</span><span class="mi">29</span>
</span><span class='line'><span class="mi">213</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">0172</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">04</span><span class="p">:</span><span class="mi">26</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">06</span><span class="p">:</span><span class="mi">00</span>
</span><span class='line'><span class="mi">213</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">0172</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">06</span><span class="p">:</span><span class="mi">59</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">10</span><span class="p">:</span><span class="mi">35</span>
</span><span class='line'><span class="mi">946</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">9760</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">03</span><span class="p">:</span><span class="mi">36</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">04</span><span class="p">:</span><span class="mi">23</span>
</span><span class='line'><span class="mi">838</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">1099</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">00</span><span class="p">:</span><span class="mi">43</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">02</span><span class="p">:</span><span class="mi">44</span>
</span><span class='line'><span class="mi">650</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">3326</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">05</span><span class="p">:</span><span class="mi">48</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">09</span><span class="p">:</span><span class="mi">08</span>
</span><span class='line'><span class="mi">838</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">1099</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">03</span><span class="p">:</span><span class="mi">43</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">06</span><span class="p">:</span><span class="mi">26</span>
</span><span class='line'><span class="mi">838</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">1099</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">07</span><span class="p">:</span><span class="mi">54</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">10</span><span class="p">:</span><span class="mi">10</span>
</span><span class='line'><span class="mi">301</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">0433</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">14</span><span class="p">:</span><span class="mi">07</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">15</span><span class="p">:</span><span class="mi">08</span>
</span><span class='line'><span class="mi">415</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">7871</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">06</span><span class="p">:</span><span class="mi">15</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">09</span><span class="p">:</span><span class="mi">32</span>
</span><span class='line'><span class="mi">650</span><span class="o">-</span><span class="mi">555</span><span class="o">-</span><span class="mi">3326</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">10</span><span class="p">:</span><span class="mi">12</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">09</span><span class="p">:</span><span class="mi">13</span><span class="p">:</span><span class="mi">09</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (phone_records.hrl)</span> <a href='/downloads/code/erlang-etudes/ch10/phone_records.hrl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">record</span> <span class="p">(</span><span class="nl">phone_record</span><span class="p">,</span> <span class="p">{</span><span class="n">phone_number</span><span class="p">,</span> <span class="n">start_date</span><span class="p">,</span> <span class="n">end_date</span><span class="p">}).</span>
</span><span class='line'><span class="p">-</span><span class="ni">record</span> <span class="p">(</span><span class="nl">customer</span><span class="p">,</span> <span class="p">{</span><span class="n">phone_number</span><span class="p">,</span> <span class="n">name_last</span><span class="p">,</span> <span class="n">name_first</span><span class="p">,</span> <span class="n">name_middle</span><span class="p">,</span> <span class="n">rate_per_minute</span><span class="p">}).</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (phone_bill.erl)</span> <a href='/downloads/code/erlang-etudes/ch10/phone_bill.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span> <span class="p">(</span><span class="n">phone_bill</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span> <span class="p">([</span><span class="n">init</span><span class="o">/</span><span class="mi">0</span><span class="p">,</span><span class="n">read_bill</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span><span class="n">summary</span><span class="o">/</span><span class="mi">0</span><span class="p">,</span><span class="n">summary</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span>
</span><span class='line'><span class="p">-</span><span class="ni">include</span> <span class="p">(</span><span class="s">&quot;phone_records.hrl&quot;</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">read_to_end</span><span class="p">(</span><span class="nv">FileLocation</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="k">case</span> <span class="nn">file</span><span class="p">:</span><span class="nf">open</span><span class="p">(</span><span class="nv">FileLocation</span><span class="p">,</span> <span class="p">[</span><span class="n">read</span><span class="p">])</span> <span class="k">of</span>
</span><span class='line'>		<span class="p">{</span><span class="n">error</span><span class="p">,</span><span class="n">enoent</span><span class="p">}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="p">[];</span>
</span><span class='line'>		<span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="nv">File</span><span class="p">}</span> <span class="o">-&gt;</span> <span class="n">read_to_end</span><span class="p">(</span><span class="nv">File</span><span class="p">,</span> <span class="p">[])</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">read_to_end</span><span class="p">({</span><span class="n">error</span><span class="p">,</span><span class="n">enoent</span><span class="p">},</span> <span class="p">_)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">[];</span>
</span><span class='line'><span class="nf">read_to_end</span><span class="p">(_,</span> <span class="p">[</span><span class="n">eof</span><span class="p">|</span><span class="nv">Lines</span><span class="p">])</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">lists</span><span class="p">:</span><span class="nf">reverse</span><span class="p">(</span><span class="nv">Lines</span><span class="p">);</span>
</span><span class='line'><span class="nf">read_to_end</span><span class="p">(</span><span class="nv">File</span><span class="p">,</span> <span class="nv">Lines</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">read_to_end</span><span class="p">(</span><span class="nv">File</span><span class="p">,</span> <span class="p">[</span><span class="nn">io</span><span class="p">:</span><span class="nf">get_line</span><span class="p">(</span><span class="nv">File</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">)|</span><span class="nv">Lines</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">read_phone_record_from_csv</span><span class="p">(</span><span class="nv">CsvLine</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">[</span><span class="nv">Number</span><span class="p">,</span><span class="nv">SDate</span><span class="p">,</span><span class="nv">STime</span><span class="p">,</span><span class="nv">EDate</span><span class="p">,</span><span class="nv">ETime</span><span class="p">|_]</span> <span class="o">=</span> <span class="nn">re</span><span class="p">:</span><span class="nf">split</span><span class="p">(</span><span class="nv">CsvLine</span><span class="p">,</span> <span class="s">&quot;[,</span><span class="se">\n</span><span class="s">]&quot;</span><span class="p">,</span> <span class="p">[{</span><span class="n">return</span><span class="p">,</span><span class="n">list</span><span class="p">}]),</span>
</span><span class='line'>	<span class="nl">#phone_record</span><span class="p">{</span>
</span><span class='line'>		<span class="n">phone_number</span><span class="o">=</span><span class="nv">Number</span><span class="p">,</span>
</span><span class='line'>		<span class="n">start_date</span><span class="o">=</span><span class="n">read_date_time</span><span class="p">(</span><span class="nv">SDate</span><span class="p">,</span><span class="nv">STime</span><span class="p">),</span>
</span><span class='line'>		<span class="n">end_date</span><span class="o">=</span><span class="n">read_date_time</span><span class="p">(</span><span class="nv">EDate</span><span class="p">,</span><span class="nv">ETime</span><span class="p">)}.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">read_date_time</span><span class="p">(</span><span class="nv">DateStr</span><span class="p">,</span> <span class="nv">TimeStr</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">{</span><span class="n">parse_three_numbers_crap</span><span class="p">(</span><span class="nn">re</span><span class="p">:</span><span class="nf">split</span><span class="p">(</span><span class="nv">DateStr</span><span class="p">,</span> <span class="s">&quot;-&quot;</span><span class="p">,</span> <span class="p">[{</span><span class="n">return</span><span class="p">,</span><span class="n">list</span><span class="p">}])),</span>
</span><span class='line'>	<span class="n">parse_three_numbers_crap</span><span class="p">(</span><span class="nn">re</span><span class="p">:</span><span class="nf">split</span><span class="p">(</span><span class="nv">TimeStr</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="p">[{</span><span class="n">return</span><span class="p">,</span><span class="n">list</span><span class="p">}]))}.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">parse_three_numbers_crap</span><span class="p">(</span><span class="nv">ThreeStringArray</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">[{</span><span class="nv">N1</span><span class="p">,_},{</span><span class="nv">N2</span><span class="p">,_},{</span><span class="nv">N3</span><span class="p">,_}]</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">map</span><span class="p">(</span><span class="k">fun</span><span class="p">(</span><span class="nv">S</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nn">string</span><span class="p">:</span><span class="nf">to_integer</span><span class="p">(</span><span class="nv">S</span><span class="p">)</span> <span class="k">end</span><span class="p">,</span> <span class="nv">ThreeStringArray</span><span class="p">),</span>
</span><span class='line'>	<span class="p">{</span><span class="nv">N1</span><span class="p">,</span><span class="nv">N2</span><span class="p">,</span><span class="nv">N3</span><span class="p">}.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">diff_date</span><span class="p">(</span><span class="nv">Date1</span><span class="p">,</span> <span class="nv">Date2</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">calendar</span><span class="p">:</span><span class="nf">datetime_to_gregorian_seconds</span><span class="p">(</span><span class="nv">Date1</span><span class="p">)</span> <span class="o">-</span>
</span><span class='line'>		<span class="nn">calendar</span><span class="p">:</span><span class="nf">datetime_to_gregorian_seconds</span><span class="p">(</span><span class="nv">Date2</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">init</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">ets</span><span class="p">:</span><span class="nf">new</span><span class="p">(</span><span class="n">phone_record</span><span class="p">,</span> <span class="p">[</span><span class="n">named_table</span><span class="p">,</span> <span class="p">{</span><span class="n">keypos</span><span class="p">,</span> <span class="nl">#phone_record.phone_number</span><span class="p">},</span> <span class="n">bag</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">read_bill</span><span class="p">(</span><span class="nv">FileLocation</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Records</span> <span class="o">=</span> <span class="n">read_to_end</span><span class="p">(</span><span class="nv">FileLocation</span><span class="p">),</span>
</span><span class='line'>	<span class="n">add_calls</span><span class="p">(</span><span class="nv">Records</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">add_calls</span><span class="p">([])</span> <span class="o">-&gt;</span> <span class="n">ok</span><span class="p">;</span>
</span><span class='line'><span class="nf">add_calls</span><span class="p">([</span><span class="nv">Record</span><span class="p">|</span><span class="nv">RemainingRecords</span><span class="p">])</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">ets</span><span class="p">:</span><span class="nf">insert</span><span class="p">(</span><span class="n">phone_record</span><span class="p">,</span>
</span><span class='line'>		<span class="n">read_phone_record_from_csv</span><span class="p">(</span><span class="nv">Record</span><span class="p">)),</span>
</span><span class='line'>	<span class="n">add_calls</span><span class="p">(</span><span class="nv">RemainingRecords</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">summary</span><span class="p">(</span><span class="nv">PhoneNumber</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Records</span> <span class="o">=</span> <span class="nn">ets</span><span class="p">:</span><span class="nf">lookup</span><span class="p">(</span><span class="n">phone_record</span><span class="p">,</span><span class="nv">PhoneNumber</span><span class="p">),</span>
</span><span class='line'>	<span class="p">{</span><span class="nv">PhoneNumber</span><span class="p">,</span> <span class="p">(</span>
</span><span class='line'>		<span class="nn">lists</span><span class="p">:</span><span class="nf">foldl</span><span class="p">(</span><span class="k">fun</span><span class="p">(</span><span class="nv">R</span><span class="p">,</span> <span class="nv">Sum</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">diff_date</span><span class="p">(</span><span class="nv">R</span><span class="nl">#phone_record.end_date</span><span class="p">,</span><span class="nv">R</span><span class="nl">#phone_record.start_date</span><span class="p">)</span> <span class="o">+</span> <span class="nv">Sum</span> <span class="k">end</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nv">Records</span><span class="p">)</span>
</span><span class='line'>		<span class="o">+</span> <span class="mi">59</span><span class="p">)</span> <span class="ow">div</span> <span class="mi">60</span><span class="p">}.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">summary</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">summary</span><span class="p">(</span><span class="nn">ets</span><span class="p">:</span><span class="nf">first</span><span class="p">(</span><span class="n">phone_record</span><span class="p">),[]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">summary</span><span class="p">(</span><span class="n">&#39;$end_of_table&#39;</span><span class="p">,</span> <span class="nv">List</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">List</span><span class="p">;</span>
</span><span class='line'><span class="nf">summary</span><span class="p">(</span><span class="nv">PhoneNumber</span><span class="p">,</span> <span class="nv">List</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">summary</span><span class="p">(</span><span class="nn">ets</span><span class="p">:</span><span class="nf">next</span><span class="p">(</span><span class="n">phone_record</span><span class="p">,</span> <span class="nv">PhoneNumber</span><span class="p">),</span> <span class="p">[</span><span class="n">summary</span><span class="p">(</span><span class="nv">PhoneNumber</span><span class="p">)|</span><span class="nv">List</span><span class="p">]).</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ã‰tudes for Erlang - CH 9]]></title>
    <link href="http://connor311.github.io/2013/07/28/etudes-for-erlang-ch-9/"/>
    <updated>2013-07-28T13:02:00-04:00</updated>
    <id>http://connor311.github.io/2013/07/28/etudes-for-erlang-ch-9</id>
    <content type="html"><![CDATA[<p>Welcome back, my fellow Erlangers!!  After last weeks etude about <a href="/2013/07/22/etudes-for-erlang-ch-8/">processess</a>, let&rsquo;s just say I am super excited to get started on chapter 9 this week.  I mean who could not be excited.  Not only did we all get to relive a small part of our childhood, but we also got into the MEAT of Erlang.  It was also the first time that as a programmer you could really show your personallity within your code.  Prior to chapter 8, each little detail was spelled out for how to do every execise leaving little to the imagination.</p>

<p>What this led to in the <a href="http://www.meetup.com/Erlang-NYC/">Meetup</a> atleast, was a bunch of code that all looked exactly the same.  For chapter 8&rsquo;s show and tell, each developer who showed their solution had a slightly different way of doing it.  There were the ones who did exactly like the book&rsquo;s solution, all in one module and straight to the point.  Then there were a few of us, like myself, who broke the problem down across a few modules and many functions within each module to better describe the problem with code.</p>

<p>Alright time to get started working on this weeks problems, Ready, Set, GOOOOO!!!<!-- more --></p>

<h2>Chapter 9: Handling Errors</h2>

<p><a href="http://chimera.labs.oreilly.com/books/1234000000726/ch09.html">link</a></p>

<p>What the hell!?!? We went from full on awesome, to error handling.  This book is like riding a roller coaster where for the first bit you have to slowly and noisily climb up the a hill.  Then you finally get to the top and start heading down what you think is the hill of awesome, only to find you just went down a measly 30 foot drop only to ride parallel to the ground going straight not even a banked turn.</p>

<p>Oh well, lets move on.  The first exercise is to add some try catch blocks to our stats module that has been following us around for the past 3 weeks.  The idea is to return a touple like: <code>{error, atom()}</code> if one of the math functions does not like what we give it.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (stats.erl)</span> <a href='/downloads/code/erlang-etudes/ch9/stats.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">stats</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">minimum</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span> <span class="n">maximum</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span> <span class="n">range</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span> <span class="n">mean</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span><span class="n">stdv</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">minimum</span><span class="p">(</span><span class="nv">List</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="k">try</span> <span class="n">minimum</span><span class="p">(</span><span class="nv">List</span><span class="p">,</span> <span class="nb">hd</span><span class="p">(</span><span class="n">list</span><span class="p">))</span> <span class="k">of</span>
</span><span class='line'>		<span class="nv">Answer</span> <span class="o">-&gt;</span> <span class="nv">Answer</span>
</span><span class='line'>	<span class="k">catch</span>
</span><span class='line'>		<span class="nn">error</span><span class="p">:</span><span class="nv">Error</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">error</span><span class="p">,</span> <span class="nv">Error</span><span class="p">}</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">minimum</span><span class="p">([],</span> <span class="nv">ActMin</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">ActMin</span><span class="p">;</span>
</span><span class='line'><span class="nf">minimum</span><span class="p">([</span><span class="nv">Head</span><span class="p">|</span><span class="nv">Tail</span><span class="p">],</span> <span class="nv">CurrMin</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="k">case</span> <span class="nv">Head</span> <span class="o">&lt;</span> <span class="nv">CurrMin</span> <span class="k">of</span>
</span><span class='line'>		<span class="n">true</span> <span class="o">-&gt;</span> <span class="n">minimum</span><span class="p">(</span><span class="nv">Tail</span><span class="p">,</span> <span class="nv">Head</span><span class="p">);</span>
</span><span class='line'>		<span class="n">false</span> <span class="o">-&gt;</span> <span class="n">minimum</span><span class="p">(</span><span class="nv">Tail</span><span class="p">,</span> <span class="nv">CurrMin</span><span class="p">)</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">maximum</span><span class="p">(</span><span class="nv">List</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="k">try</span> <span class="n">maximum</span><span class="p">(</span><span class="nv">List</span><span class="p">,</span> <span class="nb">hd</span><span class="p">(</span><span class="n">list</span><span class="p">))</span> <span class="k">of</span>
</span><span class='line'>		<span class="nv">Answer</span> <span class="o">-&gt;</span> <span class="nv">Answer</span>
</span><span class='line'>	<span class="k">catch</span>
</span><span class='line'>		<span class="nn">error</span><span class="p">:</span><span class="nv">Error</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">error</span><span class="p">,</span> <span class="nv">Error</span><span class="p">}</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">maximum</span><span class="p">([],</span> <span class="nv">ActMax</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">ActMax</span><span class="p">;</span>
</span><span class='line'><span class="nf">maximum</span><span class="p">([</span><span class="nv">Head</span><span class="p">|</span><span class="nv">Tail</span><span class="p">],</span> <span class="nv">CurrMax</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="k">case</span> <span class="nv">Head</span> <span class="o">&gt;</span> <span class="nv">CurrMax</span> <span class="k">of</span>
</span><span class='line'>		<span class="n">true</span> <span class="o">-&gt;</span> <span class="n">maximum</span><span class="p">(</span><span class="nv">Tail</span><span class="p">,</span> <span class="nv">Head</span><span class="p">);</span>
</span><span class='line'>		<span class="n">false</span> <span class="o">-&gt;</span> <span class="n">maximum</span><span class="p">(</span><span class="nv">Tail</span><span class="p">,</span> <span class="nv">CurrMax</span><span class="p">)</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">range</span><span class="p">(</span><span class="nv">List</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">minimum</span><span class="p">(</span><span class="nv">List</span><span class="p">),</span> <span class="n">maximum</span><span class="p">(</span><span class="nv">List</span><span class="p">)].</span>
</span><span class='line'>
</span><span class='line'><span class="nf">mean</span><span class="p">(</span><span class="nv">List</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="k">try</span>
</span><span class='line'>		<span class="nv">Length</span> <span class="o">=</span> <span class="nb">length</span><span class="p">(</span><span class="nv">List</span><span class="p">),</span>
</span><span class='line'>		<span class="nv">Sum</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">foldl</span><span class="p">(</span><span class="k">fun</span><span class="p">(</span><span class="nv">X</span><span class="p">,</span> <span class="nv">Acc</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">X</span> <span class="o">+</span> <span class="nv">Acc</span> <span class="k">end</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">List</span><span class="p">),</span>
</span><span class='line'>		<span class="nv">Sum</span> <span class="o">/</span> <span class="nv">Length</span>
</span><span class='line'>	<span class="k">catch</span>
</span><span class='line'>		<span class="nn">error</span><span class="p">:</span><span class="nv">Error</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">error</span><span class="p">,</span> <span class="nv">Error</span><span class="p">}</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">stdv</span><span class="p">(</span><span class="nv">List</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="k">try</span>
</span><span class='line'>		<span class="nv">Length</span> <span class="o">=</span> <span class="nb">length</span><span class="p">(</span><span class="nv">List</span><span class="p">),</span>
</span><span class='line'>		<span class="nv">Sum</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">foldl</span><span class="p">(</span><span class="k">fun</span><span class="p">(</span><span class="nv">X</span><span class="p">,</span> <span class="nv">Acc</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">X</span> <span class="o">+</span> <span class="nv">Acc</span> <span class="k">end</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">List</span><span class="p">),</span>
</span><span class='line'>		<span class="nv">Sum_Of_Squares</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">foldl</span><span class="p">(</span><span class="k">fun</span><span class="p">(</span><span class="nv">X</span><span class="p">,</span> <span class="nv">Acc</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">X</span><span class="o">*</span><span class="nv">X</span><span class="p">)</span> <span class="o">+</span> <span class="nv">Acc</span> <span class="k">end</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">List</span><span class="p">),</span>
</span><span class='line'>		<span class="nv">Step5</span> <span class="o">=</span> <span class="p">(</span><span class="nv">Length</span> <span class="o">*</span> <span class="nv">Sum_Of_Squares</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="nv">Sum</span> <span class="o">*</span> <span class="nv">Sum</span><span class="p">),</span>
</span><span class='line'>		<span class="nv">Step6</span> <span class="o">=</span> <span class="nv">Step5</span> <span class="o">/</span> <span class="p">(</span><span class="nv">Length</span> <span class="o">*</span> <span class="p">(</span><span class="nv">Length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)),</span>
</span><span class='line'>		<span class="nn">math</span><span class="p">:</span><span class="nf">sqrt</span><span class="p">(</span><span class="nv">Step6</span><span class="p">)</span>
</span><span class='line'>	<span class="k">catch</span>
</span><span class='line'>		<span class="nn">error</span><span class="p">:</span><span class="nv">Error</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">error</span><span class="p">,</span> <span class="nv">Error</span><span class="p">}</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Nothing there was too different from any other programming language, in terms of syntax.  The only thing that might get you caught up is <code>error:Error</code> syntax for binding the error to a variable.</p>

<p>Ok, things are starting to look up for this etude, we get to simulate a bank.  The main principle that we are trying to learn is, logging in Erlang.</p>

<p>As a side note I want to mention, I am always suprised by what just comes standard with Erlang.  Most languages do not have logging modules built into them.  Erlang even comes with a testing framework EUnit, which I will actually use today to make this a little bit more engaging.</p>

<p>Back to building a bank.  For our bank we want our customer (the console) to be able to specify how much money they want to start with. AWESOME!  Wish that was real lifeâ€¦ Given that amount as a starting point, let the customer either: deposit money, withdraw money, see their balance, or finish their session.</p>

<p>As I noted our customer will be the console, which sucks!  The book says to use our code to prompt the user from <a href="/2013/07/08/etudes-for-erlang-ch-5">chapter 5</a>.  I however hated how much coding that required me to do, and I only had a solution for just that specific prompt.  So I went ahead and created a UI module to put that code into a seporate more abstract form.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (ui.erl)</span> <a href='/downloads/code/erlang-etudes/ch9/ui.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span> <span class="p">(</span><span class="n">ui</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span> <span class="p">([</span><span class="n">request_number</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span> <span class="n">request_action</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span><span class="ni">include_lib</span><span class="p">(</span><span class="s">&quot;eunit/include/eunit.hrl&quot;</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span><span class="ni">spec</span><span class="p">(</span><span class="n">request_number</span><span class="p">(</span><span class="n">string</span><span class="p">())</span> <span class="o">-&gt;</span> <span class="n">number</span><span class="p">()</span> <span class="p">|</span> <span class="n">error</span><span class="p">).</span>
</span><span class='line'><span class="nf">request_number</span><span class="p">(</span><span class="nv">Prompt</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Result</span> <span class="o">=</span> <span class="nn">io</span><span class="p">:</span><span class="nf">get_line</span><span class="p">(</span><span class="nv">Prompt</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">Number</span> <span class="o">=</span> <span class="nn">string</span><span class="p">:</span><span class="nf">to_float</span><span class="p">(</span><span class="nv">Result</span><span class="p">),</span>
</span><span class='line'>	<span class="k">case</span> <span class="nv">Number</span> <span class="k">of</span>
</span><span class='line'>		<span class="p">{</span><span class="n">error</span><span class="p">,_}</span> <span class="o">-&gt;</span> <span class="nb">element</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nn">string</span><span class="p">:</span><span class="nf">to_integer</span><span class="p">(</span><span class="nv">Result</span><span class="p">));</span>
</span><span class='line'>		<span class="p">_</span> <span class="o">-&gt;</span> <span class="nb">element</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">Number</span><span class="p">)</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">-</span><span class="ni">spec</span><span class="p">(</span><span class="n">request_action</span><span class="p">(</span><span class="n">list</span><span class="p">())</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">atom</span><span class="p">(),</span> <span class="n">char</span><span class="p">()}</span> <span class="p">|</span> <span class="p">{</span><span class="n">unknown_action</span><span class="p">,</span> <span class="n">char</span><span class="p">()}).</span>
</span><span class='line'><span class="nf">request_action</span><span class="p">(</span><span class="nv">ActionItems</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Prompt</span> <span class="o">=</span> <span class="n">build_action_prompt</span><span class="p">(</span><span class="nv">ActionItems</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">Char</span> <span class="o">=</span> <span class="n">prompt_for_lowercase_char</span><span class="p">(</span><span class="nv">Prompt</span><span class="p">),</span>
</span><span class='line'>	<span class="n">resolve_action_from_char</span><span class="p">(</span><span class="nv">Char</span><span class="p">,</span> <span class="nv">ActionItems</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">build_action_prompt</span><span class="p">([{_,</span> <span class="nv">Prompt</span><span class="p">,</span> <span class="p">_}|[]],</span> <span class="nv">Line</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Line</span> <span class="o">++</span> <span class="nv">Prompt</span> <span class="o">++</span> <span class="s">&quot;: &quot;</span><span class="p">;</span>
</span><span class='line'><span class="nf">build_action_prompt</span><span class="p">([{_,</span> <span class="nv">Prompt</span><span class="p">,</span> <span class="p">_}|</span><span class="nv">Tail</span><span class="p">],</span> <span class="nv">Line</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">build_action_prompt</span><span class="p">(</span><span class="nv">Tail</span><span class="p">,</span> <span class="nv">Line</span> <span class="o">++</span> <span class="nv">Prompt</span> <span class="o">++</span> <span class="s">&quot;, &quot;</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">prompt_for_lowercase_char</span><span class="p">(</span><span class="nv">Prompt</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">[</span><span class="nv">Char</span><span class="p">|_]</span> <span class="o">=</span> <span class="nn">io</span><span class="p">:</span><span class="nf">get_line</span><span class="p">(</span><span class="nv">Prompt</span><span class="p">),</span>
</span><span class='line'>	<span class="nn">string</span><span class="p">:</span><span class="nf">to_lower</span><span class="p">(</span><span class="nv">Char</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">resolve_action_from_char</span><span class="p">(</span><span class="nv">Char</span><span class="p">,</span> <span class="p">[])</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">{</span><span class="n">unknown_action</span><span class="p">,</span> <span class="nv">Char</span><span class="p">};</span>
</span><span class='line'><span class="nf">resolve_action_from_char</span><span class="p">(</span><span class="nv">Char</span><span class="p">,</span> <span class="p">[{</span><span class="nv">Char</span><span class="p">,</span> <span class="p">_,</span> <span class="nv">ActionAtom</span><span class="p">}|_])</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">{</span><span class="nv">ActionAtom</span><span class="p">,</span> <span class="nv">Char</span><span class="p">};</span>
</span><span class='line'><span class="nf">resolve_action_from_char</span><span class="p">(</span><span class="nv">Char</span><span class="p">,</span> <span class="p">[{_,</span> <span class="p">_,</span> <span class="p">_}|</span><span class="nv">Tail</span><span class="p">])</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">resolve_action_from_char</span><span class="p">(</span><span class="nv">Char</span><span class="p">,</span> <span class="nv">Tail</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">%% TESTS %%</span>
</span><span class='line'>
</span><span class='line'><span class="nf">build_action_prompt_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="s">&quot;Y)es, N)o: &quot;</span> <span class="o">=</span> <span class="n">build_action_prompt</span><span class="p">([{</span><span class="sc">$y</span><span class="p">,</span><span class="s">&quot;Y)es&quot;</span><span class="p">,</span> <span class="n">yes_action</span><span class="p">},{</span><span class="sc">$n</span><span class="p">,</span><span class="s">&quot;N)o&quot;</span><span class="p">,</span> <span class="n">no_action</span><span class="p">}],</span> <span class="s">&quot;&quot;</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">resolve_action_from_char_ok_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">{</span><span class="n">yes_action</span><span class="p">,</span> <span class="sc">$y</span><span class="p">}</span> <span class="o">=</span> <span class="n">resolve_action_from_char</span><span class="p">(</span><span class="sc">$y</span><span class="p">,</span> <span class="p">[{</span><span class="sc">$y</span><span class="p">,</span><span class="s">&quot;Y)es&quot;</span><span class="p">,</span> <span class="n">yes_action</span><span class="p">},{</span><span class="sc">$n</span><span class="p">,</span><span class="s">&quot;N)o&quot;</span><span class="p">,</span> <span class="n">no_action</span><span class="p">}]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">resolve_action_from_char_unknown_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">{</span><span class="n">unknown_action</span><span class="p">,</span> <span class="sc">$x</span><span class="p">}</span> <span class="o">=</span> <span class="n">resolve_action_from_char</span><span class="p">(</span><span class="sc">$x</span><span class="p">,</span> <span class="p">[{</span><span class="sc">$y</span><span class="p">,</span><span class="s">&quot;Y)es&quot;</span><span class="p">,</span> <span class="n">yes_action</span><span class="p">},{</span><span class="sc">$n</span><span class="p">,</span><span class="s">&quot;N)o&quot;</span><span class="p">,</span> <span class="n">no_action</span><span class="p">}]).</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>I created a simple way to ask for a number, ui:request_number/1, where all that is needed is the prompt string.  I also needed to be able to prompt the user for a selection from a list of options. For that I added ui:request_action/1, where the developer can pass in a list of touples: <code>{LowerCaseChar, PromptString, Atom_Representing_Action}</code>.  For each touple passed in, the code will create a full prompt string and return the selected action in the form of the passed in, Atom_Representing_Action.  I also tried to seporate out the logic from the console input, so that I could test the building of the strings and action selection.</p>

<p>Now that I do not have to duplicate more ui request code, I will get started on the bank module.  The author gives us 3 requirements that must be met and logged.</p>

<ol>
<li>Deposits and withdrawals cannot be negative numbers (logged as error)</li>
<li>Deposits of $10,000 or more might be subject to hold (logged as warning)</li>
<li>All other transactions are successful (logged as informational)</li>
</ol>


<p>There are a few things I want to mention before you look at the code.  I again tried to break out the connection between the console input from the logic, so that I could test the logic functions.  I did this by allowing some functions to accept a <code>fun</code> parameter that can be swapped out in the tests to not use the console for input.  I also broke each seporate type of transaction into their own function sets to better contain their logic and test-ability.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (bank.erl)</span> <a href='/downloads/code/erlang-etudes/ch9/bank.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span> <span class="p">(</span><span class="n">bank</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span> <span class="p">([</span><span class="n">account</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span><span class="ni">include_lib</span><span class="p">(</span><span class="s">&quot;eunit/include/eunit.hrl&quot;</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">account</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">account</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">,</span>
</span><span class='line'>		<span class="k">fun</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="nn">ui</span><span class="p">:</span><span class="nf">request_action</span><span class="p">(</span><span class="n">bank_actions</span><span class="p">())</span> <span class="k">end</span><span class="p">,</span>
</span><span class='line'>		<span class="k">fun</span><span class="p">(</span><span class="nv">Prompt</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nn">ui</span><span class="p">:</span><span class="nf">request_number</span><span class="p">(</span><span class="nv">Prompt</span><span class="p">)</span> <span class="k">end</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">account</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">,</span> <span class="nv">ActionGetterFunc</span><span class="p">,</span> <span class="nv">NumberGetterFunc</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">NewBalance</span> <span class="o">=</span> <span class="n">account_handler</span><span class="p">(</span>
</span><span class='line'>					<span class="nv">CurBalance</span><span class="p">,</span>
</span><span class='line'>					<span class="nv">ActionGetterFunc</span><span class="p">(),</span>
</span><span class='line'>					<span class="nv">NumberGetterFunc</span><span class="p">),</span>
</span><span class='line'>	<span class="k">case</span> <span class="nv">NewBalance</span> <span class="k">of</span>
</span><span class='line'>		<span class="n">quit</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="n">true</span><span class="p">;</span>
</span><span class='line'>		<span class="p">_</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="n">account</span><span class="p">(</span><span class="nv">NewBalance</span><span class="p">,</span> <span class="nv">ActionGetterFunc</span><span class="p">,</span> <span class="nv">NumberGetterFunc</span><span class="p">)</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">account_handler</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">,</span> <span class="p">{</span><span class="nv">Action</span><span class="p">,</span> <span class="nv">Input</span><span class="p">},</span> <span class="nv">NumberGetterFunc</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="k">case</span> <span class="nv">Action</span> <span class="k">of</span>
</span><span class='line'>		<span class="n">deposit_action</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="n">deposit</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">,</span> <span class="nv">NumberGetterFunc</span><span class="p">);</span>
</span><span class='line'>		<span class="n">withdraw_action</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="n">withdraw</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">,</span> <span class="nv">NumberGetterFunc</span><span class="p">);</span>
</span><span class='line'>		<span class="n">balance_action</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="n">balance</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">);</span>
</span><span class='line'>		<span class="n">quit_action</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="n">quit</span><span class="p">;</span>
</span><span class='line'>		<span class="n">unknown_action</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Unknown command </span><span class="si">~c~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Input</span><span class="p">]),</span>
</span><span class='line'>			<span class="nv">CurBalance</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">deposit</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">,</span> <span class="nv">NumberGetterFunc</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Amount</span> <span class="o">=</span> <span class="nv">NumberGetterFunc</span><span class="p">(</span><span class="s">&quot;Amount to deposit: &quot;</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">Response</span> <span class="o">=</span> <span class="n">deposit_handler</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">,</span> <span class="nv">Amount</span><span class="p">),</span>
</span><span class='line'>	<span class="k">case</span> <span class="nv">Response</span> <span class="k">of</span>
</span><span class='line'>		<span class="p">{</span><span class="n">error</span><span class="p">,</span> <span class="p">_}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nv">CurBalance</span><span class="p">;</span>
</span><span class='line'>		<span class="p">{_,</span> <span class="nv">NewBalance</span><span class="p">}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Your new balance is </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">NewBalance</span><span class="p">]),</span>
</span><span class='line'>			<span class="nv">NewBalance</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">deposit_handler</span><span class="p">(_,</span> <span class="nv">Amount</span><span class="p">)</span> <span class="k">when</span> <span class="nv">Amount</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Deposits may not be less than zero.</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">),</span>
</span><span class='line'>	<span class="nn">error_logger</span><span class="p">:</span><span class="nf">error_msg</span><span class="p">(</span><span class="s">&quot;Negative deposit amount </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Amount</span><span class="p">]),</span>
</span><span class='line'>	<span class="p">{</span><span class="n">error</span><span class="p">,</span> <span class="n">negative_amount</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nf">deposit_handler</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">,</span> <span class="nv">Amount</span><span class="p">)</span> <span class="k">when</span> <span class="nv">Amount</span> <span class="o">&gt;</span> <span class="mi">10000</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Your deposit of $</span><span class="si">~p</span><span class="s"> may be subject to hold.</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Amount</span><span class="p">]),</span>
</span><span class='line'>	<span class="nn">error_logger</span><span class="p">:</span><span class="nf">warning_msg</span><span class="p">(</span><span class="s">&quot;Excessive deposit </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Amount</span><span class="p">]),</span>
</span><span class='line'>	<span class="p">{</span><span class="n">warn</span><span class="p">,</span> <span class="nv">CurBalance</span> <span class="o">+</span> <span class="nv">Amount</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nf">deposit_handler</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">,</span> <span class="nv">Amount</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">error_logger</span><span class="p">:</span><span class="nf">info_msg</span><span class="p">(</span><span class="s">&quot;Successfull deposit </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Amount</span><span class="p">]),</span>
</span><span class='line'>	<span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="nv">CurBalance</span> <span class="o">+</span> <span class="nv">Amount</span><span class="p">}.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">withdraw</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">,</span> <span class="nv">NumberGetterFunc</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Amount</span> <span class="o">=</span> <span class="nv">NumberGetterFunc</span><span class="p">(</span><span class="s">&quot;Amount to withdraw: &quot;</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">Response</span> <span class="o">=</span> <span class="n">withdraw_handler</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">,</span> <span class="nv">Amount</span><span class="p">),</span>
</span><span class='line'>	<span class="k">case</span> <span class="nv">Response</span> <span class="k">of</span>
</span><span class='line'>		<span class="p">{</span><span class="n">error</span><span class="p">,</span> <span class="p">_}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nv">CurBalance</span><span class="p">;</span>
</span><span class='line'>		<span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="nv">NewBalance</span><span class="p">}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Your new balance is </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">NewBalance</span><span class="p">]),</span>
</span><span class='line'>			<span class="nv">NewBalance</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">withdraw_handler</span><span class="p">(_,</span> <span class="nv">Amount</span><span class="p">)</span> <span class="k">when</span> <span class="nv">Amount</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Withdraws may not be less than zero.</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">),</span>
</span><span class='line'>	<span class="nn">error_logger</span><span class="p">:</span><span class="nf">error_msg</span><span class="p">(</span><span class="s">&quot;Negative withdraw amount </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Amount</span><span class="p">]),</span>
</span><span class='line'>	<span class="p">{</span><span class="n">error</span><span class="p">,</span> <span class="n">negative_amount</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nf">withdraw_handler</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">,</span> <span class="nv">Amount</span><span class="p">)</span> <span class="k">when</span> <span class="nv">Amount</span> <span class="o">&gt;</span> <span class="nv">CurBalance</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;You cannot withdraw more than your current balance of </span><span class="si">~p</span><span class="s">.</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">[</span><span class="nv">CurBalance</span><span class="p">]),</span>
</span><span class='line'>	<span class="nn">error_logger</span><span class="p">:</span><span class="nf">error_msg</span><span class="p">(</span><span class="s">&quot;Overdraw </span><span class="si">~p</span><span class="s"> from balance </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Amount</span><span class="p">,</span> <span class="nv">CurBalance</span><span class="p">]),</span>
</span><span class='line'>	<span class="p">{</span><span class="n">error</span><span class="p">,</span> <span class="n">overdraw</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nf">withdraw_handler</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">,</span> <span class="nv">Amount</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">error_logger</span><span class="p">:</span><span class="nf">info_msg</span><span class="p">(</span><span class="s">&quot;Successfull withdraw </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Amount</span><span class="p">]),</span>
</span><span class='line'>	<span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="nv">CurBalance</span> <span class="o">-</span> <span class="nv">Amount</span><span class="p">}.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">balance</span><span class="p">(</span><span class="nv">CurBalance</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Your balance is </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">CurBalance</span><span class="p">]),</span>
</span><span class='line'>	<span class="nn">error_logger</span><span class="p">:</span><span class="nf">info_msg</span><span class="p">(</span><span class="s">&quot;Balance inquery </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">CurBalance</span><span class="p">]),</span>
</span><span class='line'>	<span class="nv">CurBalance</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">bank_actions</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">[</span>
</span><span class='line'>		<span class="p">{</span><span class="sc">$d</span><span class="p">,</span> <span class="s">&quot;D)eposit&quot;</span><span class="p">,</span> <span class="n">deposit_action</span><span class="p">},</span>
</span><span class='line'>		<span class="p">{</span><span class="sc">$w</span><span class="p">,</span> <span class="s">&quot;W)ithdraw&quot;</span><span class="p">,</span> <span class="n">withdraw_action</span><span class="p">},</span>
</span><span class='line'>		<span class="p">{</span><span class="sc">$b</span><span class="p">,</span> <span class="s">&quot;B)alance&quot;</span><span class="p">,</span> <span class="n">balance_action</span><span class="p">},</span>
</span><span class='line'>		<span class="p">{</span><span class="sc">$q</span><span class="p">,</span> <span class="s">&quot;Q)uit&quot;</span><span class="p">,</span> <span class="n">quit_action</span><span class="p">}</span>
</span><span class='line'>	<span class="p">].</span>
</span><span class='line'>
</span><span class='line'><span class="c">%% TESTS %%</span>
</span><span class='line'>
</span><span class='line'><span class="nf">deposit_handler_ok_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="mi">2300</span><span class="p">}</span> <span class="o">=</span> <span class="n">deposit_handler</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span> <span class="mi">300</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">deposit_handler_error_negative_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">{</span><span class="n">error</span><span class="p">,</span> <span class="n">negative_amount</span><span class="p">}</span> <span class="o">=</span> <span class="n">deposit_handler</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="o">-</span><span class="mi">200</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">deposit_handler_high_deposit_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">{</span><span class="n">warn</span><span class="p">,</span> <span class="mi">20000</span><span class="p">}</span> <span class="o">=</span> <span class="n">deposit_handler</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">20000</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">withdraw_handler_ok_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="mi">2000</span><span class="p">}</span> <span class="o">=</span> <span class="n">withdraw_handler</span><span class="p">(</span><span class="mi">2300</span><span class="p">,</span> <span class="mi">300</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">withdraw_handler_error_negative_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">{</span><span class="n">error</span><span class="p">,</span> <span class="n">negative_amount</span><span class="p">}</span> <span class="o">=</span> <span class="n">withdraw_handler</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="o">-</span><span class="mi">200</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">withdraw_handler_error_overdraw_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">{</span><span class="n">error</span><span class="p">,</span> <span class="n">overdraw</span><span class="p">}</span> <span class="o">=</span> <span class="n">withdraw_handler</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="mi">2300</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">balance_ok_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Expected</span> <span class="o">=</span> <span class="mi">200</span><span class="p">,</span>
</span><span class='line'>	<span class="nv">Expected</span> <span class="o">=</span> <span class="n">balance</span><span class="p">(</span><span class="nv">Expected</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">account_handler_deposit_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="mi">2300</span> <span class="o">=</span> <span class="n">account_handler</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span> <span class="p">{</span><span class="n">deposit_action</span><span class="p">,</span><span class="sc">$d</span><span class="p">},</span> <span class="k">fun</span><span class="p">(_)</span> <span class="o">-&gt;</span> <span class="mi">300</span> <span class="k">end</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">account_handler_withdraw_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="mi">2000</span> <span class="o">=</span> <span class="n">account_handler</span><span class="p">(</span><span class="mi">2300</span><span class="p">,</span> <span class="p">{</span><span class="n">withdraw_action</span><span class="p">,</span><span class="sc">$w</span><span class="p">},</span> <span class="k">fun</span><span class="p">(_)</span> <span class="o">-&gt;</span> <span class="mi">300</span> <span class="k">end</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">account_handler_balance_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="mi">2000</span> <span class="o">=</span> <span class="n">account_handler</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span> <span class="p">{</span><span class="n">balance_action</span><span class="p">,</span><span class="sc">$b</span><span class="p">},</span> <span class="k">fun</span><span class="p">(_)</span> <span class="o">-&gt;</span> <span class="n">throw</span><span class="p">(</span><span class="n">test_fail</span><span class="p">)</span> <span class="k">end</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">account_handler_quit_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">quit</span> <span class="o">=</span> <span class="n">account_handler</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span> <span class="p">{</span><span class="n">quit_action</span><span class="p">,</span><span class="sc">$q</span><span class="p">},</span> <span class="k">fun</span><span class="p">(_)</span> <span class="o">-&gt;</span> <span class="n">throw</span><span class="p">(</span><span class="n">test_fail</span><span class="p">)</span> <span class="k">end</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">account_handler_unknown_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="mi">2000</span> <span class="o">=</span> <span class="n">account_handler</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span> <span class="p">{</span><span class="n">unknown_action</span><span class="p">,</span><span class="sc">$x</span><span class="p">},</span> <span class="k">fun</span><span class="p">(_)</span> <span class="o">-&gt;</span> <span class="n">throw</span><span class="p">(</span><span class="n">test_fail</span><span class="p">)</span> <span class="k">end</span><span class="p">).</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>While at first I realize I was not as excited about the chapter as I was before I read the title, but in the end it turned out to be a fun one.  Due the the simplicity of what the book asked me to do, I was able to better write my code to test it without reliance on the console.</p>

<p>If you have any suggestions about how I could improve the tesability or readability of the code, I would love to hear them.  Since I am still learning Erlang I might have done things that a veteran Erlang programmer would never do, so please let me know.  Also if you have a solution you want to share, just put a link to your solution in the comments, I will take a look.</p>

<p>Til next week, Bon Voyage!!!  Oh come to the <a href="http://www.meetup.com/Erlang-NYC/">Meetup</a>!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ã‰tudes for Erlang - CH 8]]></title>
    <link href="http://connor311.github.io/2013/07/22/etudes-for-erlang-ch-8/"/>
    <updated>2013-07-22T23:14:00-04:00</updated>
    <id>http://connor311.github.io/2013/07/22/etudes-for-erlang-ch-8</id>
    <content type="html"><![CDATA[<p>For the past few weeks we have been diving into the normal workings of Erlang.  So far however we have not really ran into anything that makes Erlang special.  To be honest if what we have gone over so far is all that was to Erlang, I would probably tell you to never use this language ever, ever, ever.  Ok maybe that is a little over the top, but as you saw in <a href="/2013/07/08/etudes-for-erlang-ch-5/">Chapter 5</a> Erlang does not handle strings very nicely and that is a lot of what a I use in my day to day programming.</p>

<p>BUT FEAR NOT, my fellow compatriots, there is way more to Erlang.  Today, in this etude we will enter the bread and butter of Erlang.  Welcome my friends to Erlang <a href="http://www.erlang.org/doc/reference_manual/processes.html">Processes</a>!!!! <!-- more --></p>

<h2>Chapter 8: Processes</h2>

<p><a href="http://chimera.labs.oreilly.com/books/1234000000726/ch08.html">link</a></p>

<p>Last week in <a href="/2013/07/15/etudes-for-erlang-ch-7/">Chapter 7</a> the etude concluded with an excersise that used list comprehension to create a deck of cards.  If I was a studied fortune teller, I might have told you that, that could be an ammonius sign pointing to this weeks etude.  I however am not and did not exactly point this out.</p>

<p>The lesson this week asks us to simulate a childhood card game used by parents to keep their kids occupied for hours and hours, The Game Of War (<em>Dun Dun Duuuuunnn</em>).  This game has some very simple rules:</p>

<pre><code>1. Split the deck evenly between two people
2. Each turn consists of each player laying down a card
3. Winner is person with the highest card (Aces high)
4. If the cards match, each player lays down three and the last one is used to battle.
5. This continues until one player has all the cards to the other player does not have enough cards to play a turn.
</code></pre>

<p>Alright, now I know what you are thinking, &ldquo;Cool a card game, but what does that have to do with Erlang processes??&rdquo;  Well I have an answer for that, think of cards as messages that are passed between people.  Then think about people as processes, catching the drift yet?</p>

<p>First on the agenda is to plan out how we want the code to work.  Since this will be the most complex piece of Erlang software we have written so far, it makes sense to spend a little time planning out the plan of attack.  I decided to use <a href="https://www.lucidchart.com/">Lucid Charts</a> to map out how I thought the flow of messages and the logic will progress.</p>

<p>Here is a picture of what I came up with:</p>

<p><img src="/downloads/code/erlang-etudes/ch8/war-planning.png"></p>

<p>I did not shy away from the author&rsquo;s suggestion to break it down into players and dealer.  After my planning session I took a little break to make sure I did not just rush out a solution.  This is what I came up with when I got to coding:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (deck.erl)</span> <a href='/downloads/code/erlang-etudes/ch8/deck.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">deck</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">make</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span> <span class="n">show_deck</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span> <span class="n">compare</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">make_deck</span><span class="o">/</span><span class="mi">0</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">make</span><span class="p">(</span><span class="nv">SizeOfDeck</span><span class="p">)</span> <span class="k">when</span> <span class="nv">SizeOfDeck</span> <span class="o">=&lt;</span> <span class="mi">52</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">{</span><span class="nv">ReturnDeck</span><span class="p">,</span> <span class="p">_}</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">split</span><span class="p">(</span><span class="nv">SizeOfDeck</span><span class="p">,</span> <span class="n">shuffle</span><span class="p">(</span><span class="n">make_deck</span><span class="p">())),</span>
</span><span class='line'>	<span class="nv">ReturnDeck</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">show_deck</span><span class="p">(</span><span class="nv">Deck</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">lists</span><span class="p">:</span><span class="nf">foreach</span><span class="p">(</span><span class="k">fun</span><span class="p">({_,</span><span class="nv">DisplayValue</span><span class="p">,</span> <span class="nv">Suit</span><span class="p">})</span> <span class="o">-&gt;</span>
</span><span class='line'>		<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;</span><span class="si">~p</span><span class="s"> of </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">[</span><span class="nv">DisplayValue</span><span class="p">,</span> <span class="nv">Suit</span><span class="p">])</span> <span class="k">end</span><span class="p">,</span> <span class="nv">Deck</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">compare</span><span class="p">({</span><span class="nv">Card1Value</span><span class="p">,</span> <span class="p">_,_},</span> <span class="p">{</span><span class="nv">Card2Value</span><span class="p">,</span> <span class="p">_,_})</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Card1Value</span> <span class="o">-</span> <span class="nv">Card2Value</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="c">%% PRIVATE %%</span>
</span><span class='line'>
</span><span class='line'><span class="nf">make_deck</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Cards</span> <span class="o">=</span>
</span><span class='line'>	<span class="p">[{</span><span class="s">&quot;2&quot;</span><span class="p">,</span><span class="mi">2</span><span class="p">},</span>
</span><span class='line'>	<span class="p">{</span><span class="s">&quot;3&quot;</span><span class="p">,</span><span class="mi">3</span><span class="p">},</span>
</span><span class='line'>	<span class="p">{</span><span class="s">&quot;4&quot;</span><span class="p">,</span><span class="mi">4</span><span class="p">},</span>
</span><span class='line'>	<span class="p">{</span><span class="s">&quot;5&quot;</span><span class="p">,</span><span class="mi">5</span><span class="p">},</span>
</span><span class='line'>	<span class="p">{</span><span class="s">&quot;6&quot;</span><span class="p">,</span><span class="mi">6</span><span class="p">},</span>
</span><span class='line'>	<span class="p">{</span><span class="s">&quot;7&quot;</span><span class="p">,</span><span class="mi">7</span><span class="p">},</span>
</span><span class='line'>	<span class="p">{</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="mi">8</span><span class="p">},</span>
</span><span class='line'>	<span class="p">{</span><span class="s">&quot;9&quot;</span><span class="p">,</span><span class="mi">9</span><span class="p">},</span>
</span><span class='line'>	<span class="p">{</span><span class="s">&quot;10&quot;</span><span class="p">,</span><span class="mi">10</span><span class="p">},</span>
</span><span class='line'>	<span class="p">{</span><span class="s">&quot;J&quot;</span><span class="p">,</span><span class="mi">11</span><span class="p">},</span>
</span><span class='line'>	<span class="p">{</span><span class="s">&quot;Q&quot;</span><span class="p">,</span><span class="mi">12</span><span class="p">},</span>
</span><span class='line'>	<span class="p">{</span><span class="s">&quot;K&quot;</span><span class="p">,</span><span class="mi">13</span><span class="p">},</span>
</span><span class='line'>	<span class="p">{</span><span class="s">&quot;A&quot;</span><span class="p">,</span> <span class="mi">14</span><span class="p">}],</span>
</span><span class='line'>	<span class="nv">Suits</span> <span class="o">=</span>
</span><span class='line'>	<span class="p">[</span><span class="s">&quot;Clubs&quot;</span><span class="p">,</span>
</span><span class='line'>	<span class="s">&quot;Diamonds&quot;</span><span class="p">,</span>
</span><span class='line'>	<span class="s">&quot;Hearts&quot;</span><span class="p">,</span>
</span><span class='line'>	<span class="s">&quot;Spades&quot;</span><span class="p">],</span>
</span><span class='line'>
</span><span class='line'>	<span class="p">[{</span><span class="nv">Value</span><span class="p">,</span> <span class="nv">DisplayValue</span><span class="p">,</span><span class="nv">Suit</span><span class="p">}</span> <span class="p">||</span>
</span><span class='line'>		<span class="p">{</span><span class="nv">DisplayValue</span><span class="p">,</span> <span class="nv">Value</span><span class="p">}</span> <span class="o">&lt;-</span> <span class="nv">Cards</span><span class="p">,</span>
</span><span class='line'>		<span class="nv">Suit</span> <span class="o">&lt;-</span> <span class="nv">Suits</span><span class="p">].</span>
</span><span class='line'>
</span><span class='line'><span class="c">%%%</span>
</span><span class='line'><span class="c">% Get the Accumulator Setup</span>
</span><span class='line'><span class="c">%%</span>
</span><span class='line'><span class="nf">shuffle</span><span class="p">(</span><span class="nv">List</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">shuffle</span><span class="p">(</span><span class="nv">List</span><span class="p">,</span> <span class="p">[]).</span>
</span><span class='line'>
</span><span class='line'><span class="c">%%</span>
</span><span class='line'><span class="c">% Break recurssion once we have gone through</span>
</span><span class='line'><span class="c">% the whole deck</span>
</span><span class='line'><span class="c">%%</span>
</span><span class='line'><span class="nf">shuffle</span><span class="p">([],</span> <span class="nv">Acc</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">Acc</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c">%%</span>
</span><span class='line'><span class="c">% Shuffle the remaining deck</span>
</span><span class='line'><span class="c">% still left in List</span>
</span><span class='line'><span class="c">%%</span>
</span><span class='line'><span class="nf">shuffle</span><span class="p">(</span><span class="nv">List</span><span class="p">,</span> <span class="nv">Acc</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="c">%% Split the deck at a random point</span>
</span><span class='line'>	<span class="c">%% then on the second part of the split</span>
</span><span class='line'>	<span class="c">%% take the top card and put at the begining of</span>
</span><span class='line'>	<span class="c">%% out shuffled pill (Acc)</span>
</span><span class='line'>	<span class="p">{</span><span class="nv">Leading</span><span class="p">,</span> <span class="p">[</span><span class="nv">H</span> <span class="p">|</span> <span class="nv">T</span><span class="p">]}</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">split</span><span class="p">(</span><span class="nn">random</span><span class="p">:</span><span class="nf">uniform</span><span class="p">(</span><span class="nb">length</span><span class="p">(</span><span class="nv">List</span><span class="p">))</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">List</span><span class="p">),</span>
</span><span class='line'>	<span class="n">shuffle</span><span class="p">(</span><span class="nv">Leading</span> <span class="o">++</span> <span class="nv">T</span><span class="p">,</span> <span class="p">[</span><span class="nv">H</span> <span class="p">|</span> <span class="nv">Acc</span><span class="p">]).</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (player.erl)</span> <a href='/downloads/code/erlang-etudes/ch8/player.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span> <span class="p">(</span><span class="n">player</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span> <span class="p">([</span><span class="n">play</span><span class="o">/</span><span class="mi">0</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">play</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">listen_loop</span><span class="p">([]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">listen_loop</span><span class="p">(</span><span class="nv">Cards</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">NumberOfCards</span> <span class="o">=</span> <span class="nb">length</span><span class="p">(</span><span class="nv">Cards</span><span class="p">),</span>
</span><span class='line'>	<span class="k">receive</span>
</span><span class='line'>		<span class="p">{_,</span> <span class="n">hand</span><span class="p">,</span> <span class="nv">NewCards</span><span class="p">}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="n">listen_loop</span><span class="p">(</span><span class="nv">NewCards</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>		<span class="p">{</span><span class="nv">From</span><span class="p">,</span> <span class="n">send_cards</span><span class="p">,</span> <span class="nv">N</span><span class="p">}</span> <span class="k">when</span> <span class="nv">N</span> <span class="o">=&lt;</span> <span class="nv">NumberOfCards</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="p">{</span><span class="nv">Hand</span><span class="p">,</span> <span class="nv">LeftCards</span><span class="p">}</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">split</span><span class="p">(</span><span class="nv">N</span><span class="p">,</span> <span class="nv">Cards</span><span class="p">),</span>
</span><span class='line'>			<span class="nv">From</span> <span class="o">!</span> <span class="p">{</span><span class="n">self</span><span class="p">(),</span> <span class="n">send_hand</span><span class="p">,</span> <span class="nv">Hand</span><span class="p">},</span>
</span><span class='line'>			<span class="n">listen_loop</span><span class="p">(</span><span class="nv">LeftCards</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>		<span class="p">{</span><span class="nv">From</span><span class="p">,</span> <span class="n">send_cards</span><span class="p">,</span> <span class="nv">N</span><span class="p">}</span> <span class="k">when</span> <span class="nv">N</span> <span class="o">&gt;</span> <span class="nv">NumberOfCards</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nv">From</span> <span class="o">!</span> <span class="p">{</span><span class="n">self</span><span class="p">(),</span> <span class="n">send_hand</span><span class="p">,</span> <span class="p">[]},</span>
</span><span class='line'>			<span class="n">listen_loop</span><span class="p">(</span><span class="nv">Cards</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>		<span class="p">{_,</span> <span class="n">won_hand</span><span class="p">,</span> <span class="nv">Pile</span><span class="p">}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="n">listen_loop</span><span class="p">(</span><span class="nv">Pile</span> <span class="o">++</span> <span class="nv">Cards</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>		<span class="p">{</span><span class="nv">From</span><span class="p">,</span> <span class="n">send_count</span><span class="p">}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nv">From</span> <span class="o">!</span> <span class="p">{</span><span class="n">self</span><span class="p">(),</span> <span class="n">send_count</span><span class="p">,</span> <span class="nv">NumberOfCards</span><span class="p">},</span>
</span><span class='line'>			<span class="n">listen_loop</span><span class="p">(</span><span class="nv">Cards</span><span class="p">)</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>		
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (dealer.erl)</span> <a href='/downloads/code/erlang-etudes/ch8/dealer.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">dealer</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span> <span class="p">([</span><span class="n">deal</span><span class="o">/</span><span class="mi">3</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">deal</span><span class="p">(</span><span class="nv">Deck</span><span class="p">,</span> <span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player2</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">{</span><span class="nv">Player1Cards</span><span class="p">,</span> <span class="nv">Player2Cards</span><span class="p">}</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">split</span><span class="p">(</span><span class="nb">length</span><span class="p">(</span><span class="nv">Deck</span><span class="p">)</span> <span class="ow">div</span> <span class="mi">2</span><span class="p">,</span> <span class="nv">Deck</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">Player1</span> <span class="o">!</span> <span class="p">{</span><span class="n">self</span><span class="p">(),</span> <span class="n">hand</span><span class="p">,</span> <span class="nv">Player1Cards</span><span class="p">},</span>
</span><span class='line'>	<span class="nv">Player2</span> <span class="o">!</span> <span class="p">{</span><span class="n">self</span><span class="p">(),</span> <span class="n">hand</span><span class="p">,</span> <span class="nv">Player2Cards</span><span class="p">},</span>
</span><span class='line'>	<span class="n">start_hand</span><span class="p">(</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player2</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">start_hand</span><span class="p">(</span><span class="nv">Player1</span><span class="p">,</span><span class="nv">Player2</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Player1</span> <span class="o">!</span> <span class="p">{</span><span class="n">self</span><span class="p">(),</span> <span class="n">send_cards</span><span class="p">,</span> <span class="mi">1</span><span class="p">},</span>
</span><span class='line'>	<span class="nv">Player2</span> <span class="o">!</span> <span class="p">{</span><span class="n">self</span><span class="p">(),</span> <span class="n">send_cards</span><span class="p">,</span> <span class="mi">1</span><span class="p">},</span>
</span><span class='line'>	<span class="n">get_hand</span><span class="p">(</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player2</span><span class="p">,</span> <span class="p">[]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">start_war</span><span class="p">(</span><span class="nv">Player1</span><span class="p">,</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Pile</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Player1</span> <span class="o">!</span> <span class="p">{</span><span class="n">self</span><span class="p">(),</span> <span class="n">send_cards</span><span class="p">,</span> <span class="mi">3</span><span class="p">},</span>
</span><span class='line'>	<span class="nv">Player2</span> <span class="o">!</span> <span class="p">{</span><span class="n">self</span><span class="p">(),</span> <span class="n">send_cards</span><span class="p">,</span> <span class="mi">3</span><span class="p">},</span>
</span><span class='line'>	<span class="n">get_hand</span><span class="p">(</span><span class="nv">Player1</span><span class="p">,</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Pile</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">get_hand</span><span class="p">(</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player2</span><span class="p">,</span> <span class="nv">Pile</span><span class="p">)</span>  <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">hand_loop</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="p">[]},{</span><span class="nv">Player2</span><span class="p">,</span> <span class="p">[]},</span> <span class="nv">Pile</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">await_hand</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player1Hand</span><span class="p">},{</span><span class="nv">Player2</span><span class="p">,</span> <span class="p">[]},</span> <span class="nv">Pile</span><span class="p">)</span>  <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">hand_loop</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player1Hand</span><span class="p">},{</span><span class="nv">Player2</span><span class="p">,</span> <span class="p">[]},</span> <span class="nv">Pile</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nf">await_hand</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="p">[]},{</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Player2Hand</span><span class="p">},</span> <span class="nv">Pile</span><span class="p">)</span>  <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">hand_loop</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="p">[]},{</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Player2Hand</span><span class="p">},</span> <span class="nv">Pile</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nf">await_hand</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player1Hand</span><span class="p">},</span>
</span><span class='line'>			<span class="p">{</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Player2Hand</span><span class="p">},</span>
</span><span class='line'>			<span class="nv">Pile</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">[</span><span class="nv">Player1HandH</span> <span class="p">|</span> <span class="nv">Player1HandT</span><span class="p">]</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">reverse</span><span class="p">(</span><span class="nv">Player1Hand</span><span class="p">),</span>
</span><span class='line'>	<span class="p">[</span><span class="nv">Player2HandH</span> <span class="p">|</span> <span class="nv">Player2HandT</span><span class="p">]</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">reverse</span><span class="p">(</span><span class="nv">Player2Hand</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">Compare</span> <span class="o">=</span> <span class="nn">deck</span><span class="p">:</span><span class="nf">compare</span><span class="p">(</span><span class="nv">Player1HandH</span><span class="p">,</span> <span class="nv">Player2HandH</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">NewPile</span> <span class="o">=</span> <span class="nv">Pile</span> <span class="o">++</span> <span class="p">[</span><span class="nv">Player1HandH</span> <span class="p">|</span> <span class="nv">Player1HandT</span><span class="p">]</span> <span class="o">++</span> <span class="p">[</span><span class="nv">Player2HandH</span> <span class="p">|</span> <span class="nv">Player2HandT</span><span class="p">],</span>
</span><span class='line'>	
</span><span class='line'>	<span class="k">if</span>	<span class="nv">Compare</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Player 1 wins hand. </span><span class="si">~p</span><span class="s"> vs </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Player1HandH</span><span class="p">,</span> <span class="nv">Player2HandH</span><span class="p">]),</span>
</span><span class='line'>			<span class="nv">Player1</span> <span class="o">!</span> <span class="p">{</span><span class="n">self</span><span class="p">(),</span> <span class="n">won_hand</span><span class="p">,</span> <span class="nv">NewPile</span><span class="p">},</span>
</span><span class='line'>			<span class="n">get_count</span><span class="p">(</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player2</span><span class="p">);</span>
</span><span class='line'>		<span class="nv">Compare</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Player 2 wins hand. </span><span class="si">~p</span><span class="s"> vs </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Player1HandH</span><span class="p">,</span> <span class="nv">Player2HandH</span><span class="p">]),</span>
</span><span class='line'>			<span class="nv">Player2</span> <span class="o">!</span> <span class="p">{</span><span class="n">self</span><span class="p">(),</span> <span class="n">won_hand</span><span class="p">,</span> <span class="nv">NewPile</span><span class="p">},</span>
</span><span class='line'>			<span class="n">get_count</span><span class="p">(</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player2</span><span class="p">);</span>
</span><span class='line'>		<span class="nv">Compare</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Start War. </span><span class="si">~p</span><span class="s"> vs </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Player1HandH</span><span class="p">,</span> <span class="nv">Player2HandH</span><span class="p">]),</span>
</span><span class='line'>			<span class="n">start_war</span><span class="p">(</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player2</span><span class="p">,</span> <span class="nv">NewPile</span><span class="p">)</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">hand_loop</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player1Hand</span><span class="p">},{</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Player2Hand</span><span class="p">},</span> <span class="nv">Pile</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="k">receive</span>
</span><span class='line'>		<span class="p">{</span><span class="nv">Player1</span><span class="p">,</span> <span class="n">send_hand</span> <span class="p">,[]}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Player 1 is out of cards.</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">[]),</span>
</span><span class='line'>			<span class="n">winner</span><span class="p">(</span><span class="s">&quot;Player 2&quot;</span><span class="p">,</span> <span class="nv">Player2</span><span class="p">,</span> <span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player2Hand</span> <span class="o">++</span> <span class="nv">Pile</span><span class="p">);</span>
</span><span class='line'>		<span class="p">{</span><span class="nv">Player2</span><span class="p">,</span> <span class="n">send_hand</span><span class="p">,[]}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Player 2 is out of cards.</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">[]),</span>
</span><span class='line'>			<span class="n">winner</span><span class="p">(</span><span class="s">&quot;Player 1&quot;</span><span class="p">,</span> <span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player2</span><span class="p">,</span> <span class="nv">Player1Hand</span> <span class="o">++</span> <span class="nv">Pile</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>		<span class="p">{</span><span class="nv">Player1</span><span class="p">,</span> <span class="n">send_hand</span> <span class="p">,</span><span class="nv">Cards</span><span class="p">}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Player 1 sent hand </span><span class="si">~p</span><span class="s">.</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">[</span><span class="nv">Cards</span><span class="p">]),</span>
</span><span class='line'>			<span class="n">await_hand</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Cards</span><span class="p">},{</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Player2Hand</span><span class="p">},</span> <span class="nv">Pile</span><span class="p">);</span>
</span><span class='line'>		<span class="p">{</span><span class="nv">Player2</span><span class="p">,</span> <span class="n">send_hand</span> <span class="p">,</span><span class="nv">Cards</span><span class="p">}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Player 2 sent hand </span><span class="si">~p</span><span class="s">.</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">[</span><span class="nv">Cards</span><span class="p">]),</span>
</span><span class='line'>			<span class="n">await_hand</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player1Hand</span><span class="p">},{</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Cards</span><span class="p">},</span> <span class="nv">Pile</span><span class="p">)</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">get_count</span><span class="p">(</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player2</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Player1</span> <span class="o">!</span> <span class="p">{</span><span class="n">self</span><span class="p">(),</span> <span class="n">send_count</span><span class="p">},</span>
</span><span class='line'>	<span class="nv">Player2</span> <span class="o">!</span> <span class="p">{</span><span class="n">self</span><span class="p">(),</span> <span class="n">send_count</span><span class="p">},</span>
</span><span class='line'>	<span class="n">count_loop</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">},</span>
</span><span class='line'>			<span class="p">{</span><span class="nv">Player2</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">}).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">await_count</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player1Count</span><span class="p">},</span>
</span><span class='line'>			<span class="p">{</span><span class="nv">Player2</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">})</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">count_loop</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player1Count</span><span class="p">},</span>
</span><span class='line'>			<span class="p">{</span><span class="nv">Player2</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nf">await_count</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">},</span>
</span><span class='line'>			<span class="p">{</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Player2Count</span><span class="p">})</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">count_loop</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">},</span>
</span><span class='line'>			<span class="p">{</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Player2Count</span><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nf">await_count</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player1Count</span><span class="p">},</span>
</span><span class='line'>			<span class="p">{</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Player2Count</span><span class="p">})</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Player 1: </span><span class="si">~p</span><span class="s">, Player 2: </span><span class="si">~p</span><span class="s">.</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Player1Count</span><span class="p">,</span> <span class="nv">Player2Count</span><span class="p">]),</span>
</span><span class='line'>	<span class="n">start_hand</span><span class="p">(</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player2</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">count_loop</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player1Count</span><span class="p">},</span>
</span><span class='line'>			<span class="p">{</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Player2Count</span><span class="p">})</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="k">receive</span>
</span><span class='line'>		<span class="p">{</span><span class="nv">Player1</span><span class="p">,</span> <span class="n">send_count</span><span class="p">,</span> <span class="nv">Num</span><span class="p">}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="n">await_count</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Num</span><span class="p">},{</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Player2Count</span><span class="p">});</span>
</span><span class='line'>		<span class="p">{</span><span class="nv">Player2</span><span class="p">,</span> <span class="n">send_count</span><span class="p">,</span> <span class="nv">Num</span><span class="p">}</span> <span class="o">-&gt;</span>
</span><span class='line'>			<span class="n">await_count</span><span class="p">({</span><span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player1Count</span><span class="p">},{</span><span class="nv">Player2</span><span class="p">,</span> <span class="nv">Num</span><span class="p">})</span>
</span><span class='line'>	<span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">winner</span><span class="p">(</span><span class="nv">PlayerName</span><span class="p">,</span> <span class="p">_</span><span class="nv">WinningPlayer</span><span class="p">,</span> <span class="p">_</span><span class="nv">LosingPlayer</span><span class="p">,</span> <span class="p">_</span><span class="nv">LootPile</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Game Over </span><span class="si">~p</span><span class="s"> Wins!</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">PlayerName</span><span class="p">]).</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>I wanted to be able to easily test with a smaller sized deck, like the etude suggested.  I created a war module that takes in the size of the deck and starts up the game.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (war.erl)</span> <a href='/downloads/code/erlang-etudes/ch8/war.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">war</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span> <span class="p">([</span><span class="n">start</span><span class="o">/</span><span class="mi">0</span><span class="p">,</span><span class="n">start</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">start</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">start</span><span class="p">(</span><span class="mi">52</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">start</span><span class="p">(</span><span class="nv">NumberOfCards</span><span class="p">)</span> <span class="k">when</span> <span class="nv">NumberOfCards</span> <span class="ow">rem</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Deck</span> <span class="o">=</span> <span class="nn">deck</span><span class="p">:</span><span class="nf">make</span><span class="p">(</span><span class="nv">NumberOfCards</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">Player1</span> <span class="o">=</span> <span class="nb">spawn</span><span class="p">(</span><span class="n">player</span><span class="p">,</span> <span class="n">play</span><span class="p">,</span> <span class="p">[]),</span>
</span><span class='line'>	<span class="nv">Player2</span> <span class="o">=</span> <span class="nb">spawn</span><span class="p">(</span><span class="n">player</span><span class="p">,</span> <span class="n">play</span><span class="p">,</span> <span class="p">[]),</span>
</span><span class='line'>	<span class="nn">dealer</span><span class="p">:</span><span class="nf">deal</span><span class="p">(</span><span class="nv">Deck</span><span class="p">,</span> <span class="nv">Player1</span><span class="p">,</span> <span class="nv">Player2</span><span class="p">).</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Here is an actual game that my simulation outputs:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (output.txt)</span> <a href='/downloads/code/erlang-etudes/ch8/output.txt'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="nv">Eshell</span> <span class="nv">V5</span><span class="p">.</span><span class="mi">10</span><span class="p">.</span><span class="mi">2</span>  <span class="p">(</span><span class="n">abort</span> <span class="n">with</span> <span class="err">^</span><span class="nv">G</span><span class="p">)</span>
</span><span class='line'><span class="mi">1</span><span class="o">&gt;</span> <span class="n">c</span><span class="p">(</span><span class="n">deck</span><span class="p">).</span>
</span><span class='line'><span class="p">{</span><span class="n">ok</span><span class="p">,</span><span class="n">deck</span><span class="p">}</span>
</span><span class='line'><span class="mi">2</span><span class="o">&gt;</span> <span class="n">c</span><span class="p">(</span><span class="n">player</span><span class="p">).</span>
</span><span class='line'><span class="p">{</span><span class="n">ok</span><span class="p">,</span><span class="n">player</span><span class="p">}</span>
</span><span class='line'><span class="mi">3</span><span class="o">&gt;</span> <span class="n">c</span><span class="p">(</span><span class="n">dealer</span><span class="p">).</span>
</span><span class='line'><span class="p">{</span><span class="n">ok</span><span class="p">,</span><span class="n">dealer</span><span class="p">}</span>
</span><span class='line'><span class="mi">4</span><span class="o">&gt;</span> <span class="n">c</span><span class="p">(</span><span class="n">war</span><span class="p">).</span>
</span><span class='line'><span class="p">{</span><span class="n">ok</span><span class="p">,</span><span class="n">war</span><span class="p">}</span>
</span><span class='line'><span class="mi">5</span><span class="o">&gt;</span> <span class="nn">war</span><span class="p">:</span><span class="nf">start</span><span class="p">(</span><span class="mi">16</span><span class="p">).</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">9</span><span class="p">,</span><span class="s">&quot;9&quot;</span><span class="p">,</span><span class="s">&quot;Hearts&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">9</span><span class="p">,</span><span class="s">&quot;9&quot;</span><span class="p">,</span><span class="s">&quot;Hearts&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">9</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">10</span><span class="p">,</span><span class="s">&quot;10&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">10</span><span class="p">,</span><span class="s">&quot;10&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">8</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">10</span><span class="p">,</span><span class="s">&quot;10&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">9</span><span class="p">,</span><span class="s">&quot;9&quot;</span><span class="p">,</span><span class="s">&quot;Hearts&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">10</span><span class="p">,</span><span class="s">&quot;10&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">9</span><span class="p">,</span><span class="s">&quot;9&quot;</span><span class="p">,</span><span class="s">&quot;Hearts&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">9</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">7</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">10</span><span class="p">,</span><span class="s">&quot;10&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">12</span><span class="p">,</span><span class="s">&quot;Q&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">10</span><span class="p">,</span><span class="s">&quot;10&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">12</span><span class="p">,</span><span class="s">&quot;Q&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">8</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">9</span><span class="p">,</span><span class="s">&quot;9&quot;</span><span class="p">,</span><span class="s">&quot;Hearts&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">10</span><span class="p">,</span><span class="s">&quot;10&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">9</span><span class="p">,</span><span class="s">&quot;9&quot;</span><span class="p">,</span><span class="s">&quot;Hearts&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">10</span><span class="p">,</span><span class="s">&quot;10&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">9</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">9</span><span class="p">,</span><span class="s">&quot;9&quot;</span><span class="p">,</span><span class="s">&quot;Hearts&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">9</span><span class="p">,</span><span class="s">&quot;9&quot;</span><span class="p">,</span><span class="s">&quot;Hearts&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">10</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">6</span><span class="p">,</span><span class="s">&quot;6&quot;</span><span class="p">,</span><span class="s">&quot;Diamonds&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">6</span><span class="p">,</span><span class="s">&quot;6&quot;</span><span class="p">,</span><span class="s">&quot;Diamonds&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">11</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">6</span><span class="p">,</span><span class="s">&quot;6&quot;</span><span class="p">,</span><span class="s">&quot;Diamonds&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">6</span><span class="p">,</span><span class="s">&quot;6&quot;</span><span class="p">,</span><span class="s">&quot;Diamonds&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">10</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Start</span> <span class="nv">War</span><span class="p">.</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">9</span><span class="p">,</span><span class="s">&quot;9&quot;</span><span class="p">,</span><span class="s">&quot;Hearts&quot;</span><span class="p">},{</span><span class="mi">10</span><span class="p">,</span><span class="s">&quot;10&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">},{</span><span class="mi">12</span><span class="p">,</span><span class="s">&quot;Q&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">6</span><span class="p">,</span><span class="s">&quot;6&quot;</span><span class="p">,</span><span class="s">&quot;Diamonds&quot;</span><span class="p">},</span>
</span><span class='line'>                    <span class="p">{</span><span class="mi">10</span><span class="p">,</span><span class="s">&quot;10&quot;</span><span class="p">,</span><span class="s">&quot;Diamonds&quot;</span><span class="p">},</span>
</span><span class='line'>                    <span class="p">{</span><span class="mi">13</span><span class="p">,</span><span class="s">&quot;K&quot;</span><span class="p">,</span><span class="s">&quot;Diamonds&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">13</span><span class="p">,</span><span class="s">&quot;K&quot;</span><span class="p">,</span><span class="s">&quot;Diamonds&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">12</span><span class="p">,</span><span class="s">&quot;Q&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">6</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">11</span><span class="p">,</span><span class="s">&quot;J&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">11</span><span class="p">,</span><span class="s">&quot;J&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">9</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">7</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Start</span> <span class="nv">War</span><span class="p">.</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">13</span><span class="p">,</span><span class="s">&quot;K&quot;</span><span class="p">,</span><span class="s">&quot;Diamonds&quot;</span><span class="p">},</span>
</span><span class='line'>                    <span class="p">{</span><span class="mi">10</span><span class="p">,</span><span class="s">&quot;10&quot;</span><span class="p">,</span><span class="s">&quot;Diamonds&quot;</span><span class="p">},</span>
</span><span class='line'>                    <span class="p">{</span><span class="mi">6</span><span class="p">,</span><span class="s">&quot;6&quot;</span><span class="p">,</span><span class="s">&quot;Diamonds&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">11</span><span class="p">,</span><span class="s">&quot;J&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">},{</span><span class="mi">14</span><span class="p">,</span><span class="s">&quot;A&quot;</span><span class="p">,</span><span class="s">&quot;Hearts&quot;</span><span class="p">},{</span><span class="mi">5</span><span class="p">,</span><span class="s">&quot;5&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">6</span><span class="p">,</span><span class="s">&quot;6&quot;</span><span class="p">,</span><span class="s">&quot;Diamonds&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">5</span><span class="p">,</span><span class="s">&quot;5&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">13</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">3</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">3</span><span class="p">,</span><span class="s">&quot;3&quot;</span><span class="p">,</span><span class="s">&quot;Hearts&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span><span class="s">&quot;3&quot;</span><span class="p">,</span><span class="s">&quot;Hearts&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">14</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">2</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">3</span><span class="p">,</span><span class="s">&quot;3&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span><span class="s">&quot;3&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">15</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">1</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">2</span><span class="p">,</span><span class="s">&quot;2&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">wins</span> <span class="n">hand</span><span class="p">.</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}</span> <span class="n">vs</span> <span class="p">{</span><span class="mi">2</span><span class="p">,</span><span class="s">&quot;2&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">16</span><span class="p">,</span> <span class="nv">Player</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">0</span><span class="p">.</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">1</span> <span class="n">sent</span> <span class="n">hand</span> <span class="p">[{</span><span class="mi">8</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;Clubs&quot;</span><span class="p">}].</span>
</span><span class='line'><span class="nv">Player</span> <span class="mi">2</span> <span class="n">is</span> <span class="n">out</span> <span class="k">of</span> <span class="n">cards</span><span class="p">.</span>
</span><span class='line'><span class="nv">Game</span> <span class="nv">Over</span> <span class="s">&quot;Player 1&quot;</span> <span class="nv">Wins</span><span class="o">!</span>
</span><span class='line'><span class="n">ok</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>If you want to see a different and probably better solution check out the solution in the book: <a href="http://chimera.labs.oreilly.com/books/1234000000726/apa.html#_literal_game_erl_literal">Game.erl</a></p>

<p><a href="/2013/07/28/etudes-for-erlang-ch-9/">Chapter 9</a></p>

<p><a href="http://www.meetup.com/Erlang-NYC/">MEETUP</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ã‰tudes for Erlang - CH 7]]></title>
    <link href="http://connor311.github.io/2013/07/15/etudes-for-erlang-ch-7/"/>
    <updated>2013-07-15T22:58:00-04:00</updated>
    <id>http://connor311.github.io/2013/07/15/etudes-for-erlang-ch-7</id>
    <content type="html"><![CDATA[<p>I have been working double duty tonight, since I have been slacking on my blogging duty.  I am again slacking, I am going to skip from <a href="/2013/07/08/etudes-for-erlang-ch-5/">chapter 5</a> to chapter 6 for now. <!-- more --></p>

<h2>Chapter 7: Higher Order Functions and List Comprehensions</h2>

<p><a href="http://chimera.labs.oreilly.com/books/1234000000726/ch07.html">link</a></p>

<p>This etude starts off freshman HS year style, with a little calculus!  It is asking us to create a method that determines the derivative of an anonymous function.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (calculus.erl)</span> <a href='/downloads/code/erlang-etudes/ch7/calculus.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">calculus</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">derivative</span><span class="o">/</span><span class="mi">2</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">derivative</span><span class="p">(</span><span class="nv">Func</span><span class="p">,</span> <span class="nv">X</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="n">derivative</span><span class="p">(</span><span class="nv">Func</span><span class="p">,</span> <span class="nv">X</span><span class="p">,</span> <span class="mi">1</span><span class="p">.</span><span class="mi">0</span><span class="n">e</span><span class="o">-</span><span class="mi">10</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">derivative</span><span class="p">(</span><span class="nv">Func</span><span class="p">,</span> <span class="nv">X</span><span class="p">,</span> <span class="nv">Delta</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">(</span><span class="nv">Func</span><span class="p">(</span><span class="nv">X</span> <span class="o">+</span> <span class="nv">Delta</span><span class="p">)</span> <span class="o">-</span> <span class="nv">Func</span><span class="p">(</span><span class="nv">X</span><span class="p">))</span> <span class="o">/</span> <span class="nv">Delta</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The next exercise is pushing our understanding of what we can do with <a href="http://www.erlang.org/doc/programming_examples/list_comprehensions.html">list comprehensions</a>.  It asks if it is possible to use pattern matching and list comprehension together?  I think YES.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (people.erl)</span> <a href='/downloads/code/erlang-etudes/ch7/people.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">people</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">part_one</span><span class="o">/</span><span class="mi">0</span>
</span><span class='line'>	<span class="p">,</span><span class="n">part_two</span><span class="o">/</span><span class="mi">0</span>
</span><span class='line'>	<span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">people_list</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">[{</span><span class="s">&quot;Federico&quot;</span><span class="p">,</span> <span class="sc">$M</span><span class="p">,</span> <span class="mi">22</span><span class="p">},</span>
</span><span class='line'>	 <span class="p">{</span><span class="s">&quot;Kim&quot;</span><span class="p">,</span> <span class="sc">$F</span><span class="p">,</span> <span class="mi">45</span><span class="p">},</span>
</span><span class='line'>	  <span class="p">{</span><span class="s">&quot;Hansa&quot;</span><span class="p">,</span> <span class="sc">$F</span><span class="p">,</span> <span class="mi">30</span><span class="p">},</span>
</span><span class='line'>	 <span class="p">{</span><span class="s">&quot;Tran&quot;</span><span class="p">,</span> <span class="sc">$M</span><span class="p">,</span> <span class="mi">47</span><span class="p">},</span>
</span><span class='line'>	  <span class="p">{</span><span class="s">&quot;Cathy&quot;</span><span class="p">,</span> <span class="sc">$F</span><span class="p">,</span> <span class="mi">32</span><span class="p">},</span>
</span><span class='line'>	   <span class="p">{</span><span class="s">&quot;Elias&quot;</span><span class="p">,</span> <span class="sc">$M</span><span class="p">,</span> <span class="mi">50</span><span class="p">}].</span>
</span><span class='line'>
</span><span class='line'><span class="nf">part_one</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">[{</span><span class="nv">Name</span><span class="p">,</span> <span class="nv">Gender</span><span class="p">,</span> <span class="nv">Age</span><span class="p">}</span> <span class="p">||</span> <span class="p">{</span><span class="nv">Name</span><span class="p">,</span> <span class="nv">Gender</span><span class="p">,</span> <span class="nv">Age</span><span class="p">}</span> <span class="o">&lt;-</span> <span class="n">people_list</span><span class="p">(),</span> <span class="nv">Gender</span> <span class="o">==</span> <span class="sc">$M</span><span class="p">,</span> <span class="nv">Age</span> <span class="o">&gt;</span> <span class="mi">40</span><span class="p">].</span>
</span><span class='line'>
</span><span class='line'><span class="nf">part_two</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">[{</span><span class="nv">Name</span><span class="p">,</span> <span class="nv">Gender</span><span class="p">,</span> <span class="nv">Age</span><span class="p">}</span> <span class="p">||</span> <span class="p">{</span><span class="nv">Name</span><span class="p">,</span> <span class="nv">Gender</span><span class="p">,</span> <span class="nv">Age</span><span class="p">}</span> <span class="o">&lt;-</span> <span class="n">people_list</span><span class="p">(),</span> <span class="p">(</span><span class="nv">Gender</span> <span class="o">==</span> <span class="sc">$M</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="nv">Age</span> <span class="o">&gt;</span> <span class="mi">40</span><span class="p">)].</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>I am starting to notice a pattern with this chapter, and I think it is lists.  Next we get to finally use some functions implemented by the framework, and not have to implement them ourselves.  The function that gets the privalige of our attention first is: lists:foldl/3. Don&rsquo;t exactly know why there is an l at the end, scratch that just looked it <a href="http://www.erlang.org/doc/man/lists.html#foldr-3">up</a>.  It seems as though you can pick which direction you want to fold the list up, which makes sense.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (stats.erl)</span> <a href='/downloads/code/erlang-etudes/ch7/stats.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">stats</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">mean</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span><span class="n">stdv</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">mean</span><span class="p">([])</span> <span class="o">-&gt;</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="nf">mean</span><span class="p">(</span><span class="nv">List</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Length</span> <span class="o">=</span> <span class="nb">length</span><span class="p">(</span><span class="nv">List</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">Sum</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">foldl</span><span class="p">(</span><span class="k">fun</span><span class="p">(</span><span class="nv">X</span><span class="p">,</span> <span class="nv">Acc</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">X</span> <span class="o">+</span> <span class="nv">Acc</span> <span class="k">end</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">List</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">Sum</span> <span class="o">/</span> <span class="nv">Length</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">stdv</span><span class="p">([])</span> <span class="o">-&gt;</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="nf">stdv</span><span class="p">(</span><span class="nv">List</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Length</span> <span class="o">=</span> <span class="nb">length</span><span class="p">(</span><span class="nv">List</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">Sum</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">foldl</span><span class="p">(</span><span class="k">fun</span><span class="p">(</span><span class="nv">X</span><span class="p">,</span> <span class="nv">Acc</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">X</span> <span class="o">+</span> <span class="nv">Acc</span> <span class="k">end</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">List</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">Sum_Of_Squares</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">foldl</span><span class="p">(</span><span class="k">fun</span><span class="p">(</span><span class="nv">X</span><span class="p">,</span> <span class="nv">Acc</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">X</span><span class="o">*</span><span class="nv">X</span><span class="p">)</span> <span class="o">+</span> <span class="nv">Acc</span> <span class="k">end</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">List</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">Step5</span> <span class="o">=</span> <span class="p">(</span><span class="nv">Length</span> <span class="o">*</span> <span class="nv">Sum_Of_Squares</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="nv">Sum</span> <span class="o">*</span> <span class="nv">Sum</span><span class="p">),</span>
</span><span class='line'>	<span class="nv">Step6</span> <span class="o">=</span> <span class="nv">Step5</span> <span class="o">/</span> <span class="p">(</span><span class="nv">Length</span> <span class="o">*</span> <span class="p">(</span><span class="nv">Length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)),</span>
</span><span class='line'>	<span class="nn">math</span><span class="p">:</span><span class="nf">sqrt</span><span class="p">(</span><span class="nv">Step6</span><span class="p">).</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>More list workâ€¦</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (list_test.erl)</span> <a href='/downloads/code/erlang-etudes/ch7/list_test.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">list_test</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">seven_four</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span><span class="n">seven_five</span><span class="o">/</span><span class="mi">0</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">seven_four</span><span class="p">(</span><span class="n">test1</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">lists</span><span class="p">:</span><span class="nf">split</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="p">[</span><span class="mi">110</span><span class="p">,</span><span class="mi">220</span><span class="p">,</span><span class="mi">330</span><span class="p">,</span><span class="mi">440</span><span class="p">,</span><span class="mi">550</span><span class="p">,</span><span class="mi">660</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="nf">seven_four</span><span class="p">(</span><span class="n">test2</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">lists</span><span class="p">:</span><span class="nf">split</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="p">[</span><span class="mi">110</span><span class="p">,</span><span class="mi">220</span><span class="p">,</span><span class="mi">330</span><span class="p">,</span><span class="mi">440</span><span class="p">,</span><span class="mi">550</span><span class="p">,</span><span class="mi">660</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">seven_five</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="p">[</span><span class="nv">X</span> <span class="o">*</span> <span class="nv">Y</span> <span class="p">||</span> <span class="nv">X</span> <span class="o">&lt;-</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">],</span> <span class="nv">Y</span> <span class="o">&lt;-</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">]].</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Have you been waiting for an exercise that kinda sorta had a real world feel to it?  Well prepare to have you real world socks, get barely dirty but still dirty!</p>

<p>We will now use what we have learned about list comprehension to create a deck of cards!  We also get to figure out how a pre-defined function works, then comment it. Junior Software Engineer in each of us just sighed a little, I know you did don&rsquo;t act like you were never assigned this task!</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (deck.erl)</span> <a href='/downloads/code/erlang-etudes/ch7/deck.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">deck</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">make_deck</span><span class="o">/</span><span class="mi">0</span><span class="p">,</span><span class="n">show_deck</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span> <span class="n">shuffle</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">make_deck</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nv">Cards</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;A&quot;</span><span class="p">,</span><span class="s">&quot;2&quot;</span><span class="p">,</span><span class="s">&quot;3&quot;</span><span class="p">,</span><span class="s">&quot;4&quot;</span><span class="p">,</span><span class="s">&quot;5&quot;</span><span class="p">,</span><span class="s">&quot;6&quot;</span><span class="p">,</span><span class="s">&quot;7&quot;</span><span class="p">,</span><span class="s">&quot;8&quot;</span><span class="p">,</span><span class="s">&quot;9&quot;</span><span class="p">,</span><span class="s">&quot;10&quot;</span><span class="p">,</span><span class="s">&quot;J&quot;</span><span class="p">,</span><span class="s">&quot;Q&quot;</span><span class="p">,</span><span class="s">&quot;K&quot;</span><span class="p">],</span>
</span><span class='line'>	<span class="nv">Suits</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;Clubs&quot;</span><span class="p">,</span><span class="s">&quot;Diamonds&quot;</span><span class="p">,</span><span class="s">&quot;Hearts&quot;</span><span class="p">,</span><span class="s">&quot;Spades&quot;</span><span class="p">],</span>
</span><span class='line'>	<span class="p">[{</span><span class="nv">Card</span><span class="p">,</span> <span class="nv">Suit</span><span class="p">}</span> <span class="p">||</span> <span class="nv">Card</span> <span class="o">&lt;-</span> <span class="nv">Cards</span><span class="p">,</span> <span class="nv">Suit</span> <span class="o">&lt;-</span> <span class="nv">Suits</span><span class="p">].</span>
</span><span class='line'>
</span><span class='line'><span class="nf">show_deck</span><span class="p">(</span><span class="nv">Deck</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="nn">lists</span><span class="p">:</span><span class="nf">foreach</span><span class="p">(</span><span class="k">fun</span><span class="p">(</span><span class="nv">Card</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;</span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">[</span><span class="nv">Card</span><span class="p">])</span> <span class="k">end</span><span class="p">,</span> <span class="nv">Deck</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="c">%%%</span>
</span><span class='line'><span class="c">% Get the Accumulator Setup</span>
</span><span class='line'><span class="c">%%</span>
</span><span class='line'><span class="nf">shuffle</span><span class="p">(</span><span class="nv">List</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">shuffle</span><span class="p">(</span><span class="nv">List</span><span class="p">,</span> <span class="p">[]).</span>
</span><span class='line'>
</span><span class='line'><span class="c">%%</span>
</span><span class='line'><span class="c">% Break recurssion once we have gone through</span>
</span><span class='line'><span class="c">% the whole deck</span>
</span><span class='line'><span class="c">%%</span>
</span><span class='line'><span class="nf">shuffle</span><span class="p">([],</span> <span class="nv">Acc</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">Acc</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c">%%</span>
</span><span class='line'><span class="c">% Shuffle the remaining deck</span>
</span><span class='line'><span class="c">% still left in List</span>
</span><span class='line'><span class="c">%%</span>
</span><span class='line'><span class="nf">shuffle</span><span class="p">(</span><span class="nv">List</span><span class="p">,</span> <span class="nv">Acc</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>	<span class="c">%% Split the deck at a random point</span>
</span><span class='line'>	<span class="c">%% then on the second part of the split</span>
</span><span class='line'>	<span class="c">%% take the top card and put at the begining of</span>
</span><span class='line'>	<span class="c">%% out shuffled pill (Acc)</span>
</span><span class='line'>	<span class="p">{</span><span class="nv">Leading</span><span class="p">,</span> <span class="p">[</span><span class="nv">H</span> <span class="p">|</span> <span class="nv">T</span><span class="p">]}</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">split</span><span class="p">(</span><span class="nn">random</span><span class="p">:</span><span class="nf">uniform</span><span class="p">(</span><span class="nb">length</span><span class="p">(</span><span class="nv">List</span><span class="p">))</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">List</span><span class="p">),</span>
</span><span class='line'>	<span class="n">shuffle</span><span class="p">(</span><span class="nv">Leading</span> <span class="o">++</span> <span class="nv">T</span><span class="p">,</span> <span class="p">[</span><span class="nv">H</span> <span class="p">|</span> <span class="nv">Acc</span><span class="p">]).</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Well I am excited to <a href="/2013/07/22/etudes-for-erlang-ch-8/">Chapter 8</a>, when we finally get into processes.  That is next week, so stay tuned!</p>

<p>What are you most excited to learn about processes, next week??</p>

<p><a href="/2013/07/22/etudes-for-erlang-ch-8/">Chapter 8</a>
<a href="http://www.meetup.com/Erlang-NYC/">MEETUP</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ã‰tudes for Erlang - CH 5]]></title>
    <link href="http://connor311.github.io/2013/07/08/etudes-for-erlang-ch-5/"/>
    <updated>2013-07-08T23:36:00-04:00</updated>
    <id>http://connor311.github.io/2013/07/08/etudes-for-erlang-ch-5</id>
    <content type="html"><![CDATA[<p>Have you missed me??  For the past two weeks I have been driving to and from many a wedding.  My cousin, Olivia, got married two weeks ago to an awesome man, John!  Then this past weekend my best friend growing up, Ben, got married to a lady who I do not know to well but any person he would marry must be a great gal!  To each of you I wish you the best!</p>

<p>I am going to stick to doing only do one chapter per blog post.  Hopefully you should see two more posts right after this one!  For those of you who have forgotten completely what I have been talking about for the past 6 weeks check out <a href="/2013/06/25/etudes-for-erlang-ch-4/">chapter 4</a>.</p>

<p>Let&rsquo;s hop right into the good stuff!<!--more--></p>

<h2>Chapter 5: Strings</h2>

<p><a href="http://chimera.labs.oreilly.com/books/1234000000726/ch05.html">link</a></p>

<p>During the meetup, everyone discussed the first etude in this chapter as really really annoying!  The task set before us is to go against the erlang mantra of &ldquo;let it fail&rdquo;, and create a command line front end to our area functions that does not fail but gives pretty error messages.  While I do agree this exercise sucks, it was still pretty interesting to try and do something that is really easy in another language only to find it super hard in erlang.</p>

<p>The exersise asks us to create our command line util in a module named ask_area, with a function called area.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (ask_area.erl)</span> <a href='/downloads/code/erlang-etudes/ch5/ask_area.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">ask_area</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">area</span><span class="o">/</span><span class="mi">0</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">area</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="p">{</span><span class="nv">Input</span><span class="p">,</span> <span class="nv">Shape</span><span class="p">}</span> <span class="o">=</span> <span class="n">get_shape</span><span class="p">(),</span>
</span><span class='line'>  <span class="k">case</span> <span class="nv">Shape</span> <span class="k">of</span>
</span><span class='line'>    <span class="n">unknown</span> <span class="o">-&gt;</span> <span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Unknown shape </span><span class="si">~c~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Input</span><span class="p">]);</span>
</span><span class='line'>    <span class="p">_</span> <span class="o">-&gt;</span> <span class="n">get_area</span><span class="p">(</span><span class="nv">Shape</span><span class="p">,</span> <span class="n">get_dimensions</span><span class="p">(</span><span class="nv">Shape</span><span class="p">))</span>
</span><span class='line'>  <span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">get_area</span><span class="p">(_,</span> <span class="p">{</span><span class="n">error</span><span class="p">,</span> <span class="p">_})</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Error in first number.</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nf">get_area</span><span class="p">(_,</span> <span class="p">{_,</span> <span class="n">error</span><span class="p">})</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Error in second number.</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nf">get_area</span><span class="p">(_,</span> <span class="p">{</span><span class="nv">X</span><span class="p">,</span> <span class="nv">Y</span><span class="p">})</span> <span class="k">when</span> <span class="nv">X</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">Y</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Both number must be greater than or equal to zero.</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nf">get_area</span><span class="p">(</span><span class="nv">Shape</span><span class="p">,</span> <span class="p">{</span><span class="nv">X</span><span class="p">,</span> <span class="nv">Y</span><span class="p">})</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nn">geom</span><span class="p">:</span><span class="nf">area</span><span class="p">({</span><span class="nv">Shape</span><span class="p">,</span> <span class="nv">X</span><span class="p">,</span> <span class="nv">Y</span><span class="p">}).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">get_shape</span><span class="p">()</span>  <span class="o">-&gt;</span>
</span><span class='line'>  <span class="p">[</span><span class="nv">Char</span><span class="p">|_]</span> <span class="o">=</span> <span class="nn">io</span><span class="p">:</span><span class="nf">get_line</span><span class="p">(</span><span class="s">&quot;R)ectangle, T)riangle, or E)llipse &gt; &quot;</span><span class="p">),</span>
</span><span class='line'>  <span class="n">char_to_shape</span><span class="p">(</span><span class="nv">Char</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">get_number</span><span class="p">(</span><span class="nv">Prompt</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nv">PromptString</span> <span class="o">=</span> <span class="s">&quot;Enter &quot;</span> <span class="o">++</span> <span class="nv">Prompt</span> <span class="o">++</span> <span class="s">&quot; &gt; &quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nv">Result</span> <span class="o">=</span> <span class="nn">io</span><span class="p">:</span><span class="nf">get_line</span><span class="p">(</span><span class="nv">PromptString</span><span class="p">),</span>
</span><span class='line'>  <span class="n">string_to_number</span><span class="p">(</span><span class="nv">Result</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">string_to_number</span><span class="p">(</span><span class="nv">String</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nv">Number</span> <span class="o">=</span> <span class="nn">string</span><span class="p">:</span><span class="nf">to_float</span><span class="p">(</span><span class="nv">String</span><span class="p">),</span>
</span><span class='line'>  <span class="k">case</span> <span class="nv">Number</span> <span class="k">of</span>
</span><span class='line'>    <span class="p">{</span><span class="n">error</span><span class="p">,_}</span> <span class="o">-&gt;</span> <span class="nb">element</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nn">string</span><span class="p">:</span><span class="nf">to_integer</span><span class="p">(</span><span class="nv">String</span><span class="p">));</span>
</span><span class='line'>    <span class="p">_</span> <span class="o">-&gt;</span> <span class="nb">element</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">Number</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">get_dimensions</span><span class="p">(</span><span class="n">triangle</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nv">Dimension1</span> <span class="o">=</span> <span class="n">get_number</span><span class="p">(</span><span class="s">&quot;width&quot;</span><span class="p">),</span>
</span><span class='line'>  <span class="nv">Dimension2</span> <span class="o">=</span> <span class="n">get_number</span><span class="p">(</span><span class="s">&quot;height&quot;</span><span class="p">),</span>
</span><span class='line'>  <span class="p">{</span><span class="nv">Dimension1</span><span class="p">,</span> <span class="nv">Dimension2</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nf">get_dimensions</span><span class="p">(</span><span class="n">rectangle</span><span class="p">)</span><span class="o">-&gt;</span>
</span><span class='line'>  <span class="nv">Dimension1</span> <span class="o">=</span> <span class="n">get_number</span><span class="p">(</span><span class="s">&quot;base&quot;</span><span class="p">),</span>
</span><span class='line'>  <span class="nv">Dimension2</span> <span class="o">=</span> <span class="n">get_number</span><span class="p">(</span><span class="s">&quot;height&quot;</span><span class="p">),</span>
</span><span class='line'>  <span class="p">{</span><span class="nv">Dimension1</span><span class="p">,</span> <span class="nv">Dimension2</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nf">get_dimensions</span><span class="p">(</span><span class="n">ellipse</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nv">Dimension1</span> <span class="o">=</span> <span class="n">get_number</span><span class="p">(</span><span class="s">&quot;axis&quot;</span><span class="p">),</span>
</span><span class='line'>  <span class="nv">Dimension2</span> <span class="o">=</span> <span class="n">get_number</span><span class="p">(</span><span class="s">&quot;axis&quot;</span><span class="p">),</span>
</span><span class='line'>  <span class="p">{</span><span class="nv">Dimension1</span><span class="p">,</span> <span class="nv">Dimension2</span><span class="p">}.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">char_to_shape</span><span class="p">(</span><span class="nv">Char</span><span class="p">)</span>  <span class="o">-&gt;</span>
</span><span class='line'>  <span class="k">case</span> <span class="nv">Char</span> <span class="k">of</span>
</span><span class='line'>    <span class="sc">$T</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">t</span><span class="p">,</span> <span class="n">triangle</span><span class="p">};</span>
</span><span class='line'>    <span class="sc">$t</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">t</span><span class="p">,</span> <span class="n">triangle</span><span class="p">};</span>
</span><span class='line'>    <span class="sc">$R</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">r</span><span class="p">,</span> <span class="n">rectangle</span><span class="p">};</span>
</span><span class='line'>    <span class="sc">$r</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">r</span><span class="p">,</span> <span class="n">rectangle</span><span class="p">};</span>
</span><span class='line'>    <span class="sc">$E</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">e</span><span class="p">,</span> <span class="n">ellipse</span><span class="p">};</span>
</span><span class='line'>    <span class="sc">$e</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">e</span><span class="p">,</span> <span class="n">ellipse</span><span class="p">};</span>
</span><span class='line'>    <span class="p">_</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="nv">Char</span><span class="p">,</span> <span class="n">unknown</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Alright if any of you worked through that with me, how long did it take you to get the right pretty error messages???  That was intense, even my stand by to just output what the code is returning to me does not work well in erlang.  I have to guess correctly as to what kind of type the thing I am trying to <code>io:format(&ldquo;~X~Y~Zâ€¦&rdquo;)</code>, else the whole thing blows up with an invalid arguments exception.</p>

<p>After that exercise I think even the author was done but his editor told him he needed two exercises in this etude.  I think that because the second exercise is kinda a joke compared to the first.  All that is needed is to take  ISO date formated string &ldquo;yyyy-mm-dd&rdquo; and return [yyyy,mm,dd] with ZERO error handling. Easy enough right.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (dates.erl)</span> <a href='/downloads/code/erlang-etudes/ch5/dates.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">dates</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">date_parts</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">date_parts</span><span class="p">(</span><span class="nv">Date</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="p">[</span><span class="nv">Year</span><span class="p">,</span> <span class="nv">Month</span><span class="p">,</span> <span class="nv">Day</span><span class="p">]</span> <span class="o">=</span> <span class="nn">re</span><span class="p">:</span><span class="nf">split</span><span class="p">(</span><span class="nv">Date</span><span class="p">,</span> <span class="s">&quot;-&quot;</span><span class="p">,</span> <span class="p">[{</span><span class="n">return</span><span class="p">,</span> <span class="n">list</span><span class="p">}]),</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">element</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nn">string</span><span class="p">:</span><span class="nf">to_integer</span><span class="p">(</span><span class="nv">Year</span><span class="p">)),</span>
</span><span class='line'>   <span class="nb">element</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nn">string</span><span class="p">:</span><span class="nf">to_integer</span><span class="p">(</span><span class="nv">Month</span><span class="p">)),</span>
</span><span class='line'>   <span class="nb">element</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nn">string</span><span class="p">:</span><span class="nf">to_integer</span><span class="p">(</span><span class="nv">Day</span><span class="p">))].</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Thats it. If anyone asks me to write a command line utility again in erlang, I am going to tell them that I will buy them lunch if I can write it in another language like ruby or c#.</p>

<p>Let me know if you ran into any other interesting issues while working on this weeks etudes!</p>

<p><a href="http://www.meetup.com/Erlang-NYC/">MEETUP</a></p>

<p><a href="/2013/07/15/etudes-for-erlang-ch-7">Chapter 7</a></p>
]]></content>
  </entry>
  
</feed>
